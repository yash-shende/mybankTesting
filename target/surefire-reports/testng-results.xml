<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="12" ignored="0" total="57" passed="45">
  <reporter-output>
  </reporter-output>
  <suite name="MultipleSuite" duration-ms="157655" started-at="2021-12-15T09:38:54Z" finished-at="2021-12-15T09:41:32Z">
    <groups>
    </groups>
    <test name="AdminPageDDTest" duration-ms="9159" started-at="2021-12-15T09:38:54Z" finished-at="2021-12-15T09:39:03Z">
      <class name="mybank.testcases.AdminPageDDTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.AdminPageDDTest@5383967b]" name="beforeSuite" is-config="true" duration-ms="6148" started-at="2021-12-15T09:38:54Z" finished-at="2021-12-15T09:39:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="adminLoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminPageDDTest@5383967b]" name="adminLoginTest" duration-ms="985" started-at="2021-12-15T09:39:00Z" data-provider="Dataset" finished-at="2021-12-15T09:39:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLoginTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AdminPageDDTest@5383967b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-15T09:39:01Z" finished-at="2021-12-15T09:39:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=adminLoginTest status=SUCCESS method=AdminPageDDTest.adminLoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminPageDDTest@5383967b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="adminLoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminPageDDTest@5383967b]" name="adminLoginTest" duration-ms="270" started-at="2021-12-15T09:39:01Z" data-provider="Dataset" finished-at="2021-12-15T09:39:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.AdminPageDDTest.adminLoginTest(AdminPageDDTest.java:48)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLoginTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AdminPageDDTest@5383967b]" name="temp" is-config="true" duration-ms="252" started-at="2021-12-15T09:39:02Z" finished-at="2021-12-15T09:39:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=adminLoginTest status=FAILURE method=AdminPageDDTest.adminLoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminPageDDTest@5383967b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="quit()[pri:0, instance:mybank.testcases.AdminPageDDTest@5383967b]" name="quit" is-config="true" duration-ms="1460" started-at="2021-12-15T09:39:02Z" finished-at="2021-12-15T09:39:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- mybank.testcases.AdminPageDDTest -->
    </test> <!-- AdminPageDDTest -->
    <test name="AdminRegisteredUsersPageTest" duration-ms="6057" started-at="2021-12-15T09:39:03Z" finished-at="2021-12-15T09:39:09Z">
      <class name="mybank.testcases.AdminRegisteredUsersPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@3a5ed7a6]" name="beforeTest" is-config="true" duration-ms="3034" started-at="2021-12-15T09:39:03Z" finished-at="2021-12-15T09:39:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="registeredUserPageAvabilityTest()[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@3a5ed7a6]" name="registeredUserPageAvabilityTest" duration-ms="1532" started-at="2021-12-15T09:39:06Z" finished-at="2021-12-15T09:39:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registeredUserPageAvabilityTest -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@3a5ed7a6]" name="ShutDown" is-config="true" duration-ms="1490" started-at="2021-12-15T09:39:08Z" finished-at="2021-12-15T09:39:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.AdminRegisteredUsersPageTest -->
    </test> <!-- AdminRegisteredUsersPageTest -->
    <test name="ApproveMoneyToUserAccountPageTest" duration-ms="5969" started-at="2021-12-15T09:39:09Z" finished-at="2021-12-15T09:39:15Z">
      <class name="mybank.testcases.ApproveMoneyToUserAccountPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@61f8bee4]" name="beforeTest" is-config="true" duration-ms="3155" started-at="2021-12-15T09:39:09Z" finished-at="2021-12-15T09:39:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="approveMoneyToUserAccountPageAvabilityTest()[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@61f8bee4]" name="approveMoneyToUserAccountPageAvabilityTest" duration-ms="1396" started-at="2021-12-15T09:39:13Z" finished-at="2021-12-15T09:39:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- approveMoneyToUserAccountPageAvabilityTest -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@61f8bee4]" name="ShutDown" is-config="true" duration-ms="1418" started-at="2021-12-15T09:39:14Z" finished-at="2021-12-15T09:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.ApproveMoneyToUserAccountPageTest -->
    </test> <!-- ApproveMoneyToUserAccountPageTest -->
    <test name="ApproveWithdrawalOfMoneyPageTest" duration-ms="5618" started-at="2021-12-15T09:39:15Z" finished-at="2021-12-15T09:39:21Z">
      <class name="mybank.testcases.ApproveWithdrawalOfMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@3dd4520b]" name="beforeTest" is-config="true" duration-ms="3003" started-at="2021-12-15T09:39:15Z" finished-at="2021-12-15T09:39:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="approveWithdrawalOfMoneyPageAvabilityTest()[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@3dd4520b]" name="approveWithdrawalOfMoneyPageAvabilityTest" duration-ms="1216" started-at="2021-12-15T09:39:18Z" finished-at="2021-12-15T09:39:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- approveWithdrawalOfMoneyPageAvabilityTest -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@3dd4520b]" name="ShutDown" is-config="true" duration-ms="1399" started-at="2021-12-15T09:39:20Z" finished-at="2021-12-15T09:39:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.ApproveWithdrawalOfMoneyPageTest -->
    </test> <!-- ApproveWithdrawalOfMoneyPageTest -->
    <test name="AdminAtmCardReqPageTest" duration-ms="5641" started-at="2021-12-15T09:39:21Z" finished-at="2021-12-15T09:39:27Z">
      <class name="mybank.testcases.AdminAtmCardReqPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@2b552920]" name="beforeTest" is-config="true" duration-ms="2878" started-at="2021-12-15T09:39:21Z" finished-at="2021-12-15T09:39:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="adminATMReqPageTest()[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@2b552920]" name="adminATMReqPageTest" duration-ms="1349" started-at="2021-12-15T09:39:24Z" finished-at="2021-12-15T09:39:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminATMReqPageTest -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@2b552920]" name="ShutDown" is-config="true" duration-ms="1413" started-at="2021-12-15T09:39:25Z" finished-at="2021-12-15T09:39:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.AdminAtmCardReqPageTest -->
    </test> <!-- AdminAtmCardReqPageTest -->
    <test name="UserLoginPageTest" duration-ms="5691" started-at="2021-12-15T09:39:27Z" finished-at="2021-12-15T09:39:32Z">
      <class name="mybank.testcases.UserLoginPageTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.UserLoginPageTest@6ebc05a6]" name="beforeSuite" is-config="true" duration-ms="3035" started-at="2021-12-15T09:39:27Z" finished-at="2021-12-15T09:39:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="LoginTest()[pri:0, instance:mybank.testcases.UserLoginPageTest@6ebc05a6]" name="LoginTest" duration-ms="1222" started-at="2021-12-15T09:39:30Z" finished-at="2021-12-15T09:39:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.UserLoginPageTest@6ebc05a6]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-15T09:39:31Z" finished-at="2021-12-15T09:39:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=UserLoginPageTest.LoginTest()[pri:0, instance:mybank.testcases.UserLoginPageTest@6ebc05a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.UserLoginPageTest@6ebc05a6]" name="tear" is-config="true" duration-ms="1431" started-at="2021-12-15T09:39:31Z" finished-at="2021-12-15T09:39:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.UserLoginPageTest -->
    </test> <!-- UserLoginPageTest -->
    <test name="RequestAtmPageTest" duration-ms="5753" started-at="2021-12-15T09:39:32Z" finished-at="2021-12-15T09:39:38Z">
      <class name="mybank.testcases.RequestAtmPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.RequestAtmPageTest@cd2dae5]" name="beforeTest" is-config="true" duration-ms="3007" started-at="2021-12-15T09:39:32Z" finished-at="2021-12-15T09:39:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="requestAtmPageAvabilityTest()[pri:0, instance:mybank.testcases.RequestAtmPageTest@cd2dae5]" name="requestAtmPageAvabilityTest" duration-ms="1308" started-at="2021-12-15T09:39:35Z" finished-at="2021-12-15T09:39:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestAtmPageAvabilityTest -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.RequestAtmPageTest@cd2dae5]" name="ShutDown" is-config="true" duration-ms="1437" started-at="2021-12-15T09:39:37Z" finished-at="2021-12-15T09:39:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.RequestAtmPageTest -->
    </test> <!-- RequestAtmPageTest -->
    <test name="AddMoneyPageTest" duration-ms="6492" started-at="2021-12-15T09:39:38Z" finished-at="2021-12-15T09:39:45Z">
      <class name="mybank.testcases.AddMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="beforeTest" is-config="true" duration-ms="2923" started-at="2021-12-15T09:39:38Z" finished-at="2021-12-15T09:39:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addMoneyPageAvabilityTest()[pri:1, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="addMoneyPageAvabilityTest" duration-ms="1400" started-at="2021-12-15T09:39:41Z" finished-at="2021-12-15T09:39:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMoneyPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-15T09:39:43Z" finished-at="2021-12-15T09:39:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMoneyPageAvabilityTest status=SUCCESS method=AddMoneyPageTest.addMoneyPageAvabilityTest()[pri:1, instance:mybank.testcases.AddMoneyPageTest@1efed156] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test2()[pri:2, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="test2" duration-ms="308" started-at="2021-12-15T09:39:43Z" finished-at="2021-12-15T09:39:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:39:43Z" finished-at="2021-12-15T09:39:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=AddMoneyPageTest.test2()[pri:2, instance:mybank.testcases.AddMoneyPageTest@1efed156] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test3()[pri:3, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="test3" duration-ms="243" started-at="2021-12-15T09:39:43Z" finished-at="2021-12-15T09:39:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-15T09:39:43Z" finished-at="2021-12-15T09:39:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SUCCESS method=AddMoneyPageTest.test3()[pri:3, instance:mybank.testcases.AddMoneyPageTest@1efed156] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test4()[pri:4, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="test4" duration-ms="219" started-at="2021-12-15T09:39:43Z" finished-at="2021-12-15T09:39:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="ShutDown" is-config="true" duration-ms="1394" started-at="2021-12-15T09:39:43Z" finished-at="2021-12-15T09:39:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@1efed156]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:39:43Z" finished-at="2021-12-15T09:39:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4 status=SUCCESS method=AddMoneyPageTest.test4()[pri:4, instance:mybank.testcases.AddMoneyPageTest@1efed156] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.AddMoneyPageTest -->
    </test> <!-- AddMoneyPageTest -->
    <test name="AddBeneficiaryPageTest" duration-ms="15851" started-at="2021-12-15T09:39:45Z" finished-at="2021-12-15T09:40:01Z">
      <class name="mybank.testcases.AddBeneficiaryPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@4bbfb90a]" name="beforeTest" is-config="true" duration-ms="3062" started-at="2021-12-15T09:39:45Z" finished-at="2021-12-15T09:39:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addBeneficiaryTest()[pri:1, instance:mybank.testcases.AddBeneficiaryPageTest@4bbfb90a]" name="addBeneficiaryTest" duration-ms="10381" started-at="2021-12-15T09:39:48Z" finished-at="2021-12-15T09:39:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBeneficiaryTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@4bbfb90a]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-15T09:39:58Z" finished-at="2021-12-15T09:39:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBeneficiaryTest status=SUCCESS method=AddBeneficiaryPageTest.addBeneficiaryTest()[pri:1, instance:mybank.testcases.AddBeneficiaryPageTest@4bbfb90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="invalidCredentialsTest()[pri:2, instance:mybank.testcases.AddBeneficiaryPageTest@4bbfb90a]" name="invalidCredentialsTest" duration-ms="736" started-at="2021-12-15T09:39:58Z" finished-at="2021-12-15T09:39:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialsTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@4bbfb90a]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-15T09:39:59Z" finished-at="2021-12-15T09:39:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidCredentialsTest status=SUCCESS method=AddBeneficiaryPageTest.invalidCredentialsTest()[pri:2, instance:mybank.testcases.AddBeneficiaryPageTest@4bbfb90a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@4bbfb90a]" name="afterTest" is-config="true" duration-ms="1670" started-at="2021-12-15T09:39:59Z" finished-at="2021-12-15T09:40:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- mybank.testcases.AddBeneficiaryPageTest -->
    </test> <!-- AddBeneficiaryPageTest -->
    <test name="DDUserLoginPageTest" duration-ms="18876" started-at="2021-12-15T09:40:01Z" finished-at="2021-12-15T09:40:19Z">
      <class name="mybank.testcases.DDUserLoginPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="setUp" is-config="true" duration-ms="3216" started-at="2021-12-15T09:40:01Z" finished-at="2021-12-15T09:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcorrectData" duration-ms="1160" started-at="2021-12-15T09:40:06Z" data-provider="LoginData" finished-at="2021-12-15T09:40:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cshayan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-15T09:40:07Z" finished-at="2021-12-15T09:40:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcorrectData" duration-ms="441" started-at="2021-12-15T09:40:07Z" data-provider="LoginData" finished-at="2021-12-15T09:40:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gaa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcorrectData" duration-ms="417" started-at="2021-12-15T09:40:07Z" data-provider="LoginData" finished-at="2021-12-15T09:40:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sayantan1999arka@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaaa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:07Z" finished-at="2021-12-15T09:40:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:08Z" finished-at="2021-12-15T09:40:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcorrectData" duration-ms="495" started-at="2021-12-15T09:40:08Z" data-provider="LoginData" finished-at="2021-12-15T09:40:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shayan90@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:08Z" finished-at="2021-12-15T09:40:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcorrectData" duration-ms="478" started-at="2021-12-15T09:40:08Z" data-provider="LoginData" finished-at="2021-12-15T09:40:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:09Z" finished-at="2021-12-15T09:40:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcorrectData" duration-ms="556" started-at="2021-12-15T09:40:09Z" data-provider="LoginData" finished-at="2021-12-15T09:40:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[juli@aa.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcorrectData" duration-ms="419" started-at="2021-12-15T09:40:09Z" data-provider="LoginData" finished-at="2021-12-15T09:40:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jhon@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:09Z" finished-at="2021-12-15T09:40:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcorrectData" duration-ms="398" started-at="2021-12-15T09:40:10Z" data-provider="LoginData" finished-at="2021-12-15T09:40:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shubhangi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:10Z" finished-at="2021-12-15T09:40:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:10Z" finished-at="2021-12-15T09:40:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcWrongData" duration-ms="449" started-at="2021-12-15T09:40:10Z" data-provider="LoginWithWrongData" finished-at="2021-12-15T09:40:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sachin@mail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:72)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="639" started-at="2021-12-15T09:40:11Z" finished-at="2021-12-15T09:40:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcWrongEmail" duration-ms="369" started-at="2021-12-15T09:40:12Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-15T09:40:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[c1shayan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:89)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="605" started-at="2021-12-15T09:40:12Z" finished-at="2021-12-15T09:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcWrongEmail" duration-ms="345" started-at="2021-12-15T09:40:13Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-15T09:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[g1aa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:89)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="683" started-at="2021-12-15T09:40:13Z" finished-at="2021-12-15T09:40:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcWrongPass" duration-ms="403" started-at="2021-12-15T09:40:14Z" data-provider="LoginWithWrongPass" finished-at="2021-12-15T09:40:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cshayan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12343]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="603" started-at="2021-12-15T09:40:14Z" finished-at="2021-12-15T09:40:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestWithcWrongPass" duration-ms="356" started-at="2021-12-15T09:40:15Z" data-provider="LoginWithWrongPass" finished-at="2021-12-15T09:40:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gaa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12343]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="652" started-at="2021-12-15T09:40:15Z" finished-at="2021-12-15T09:40:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestSensitive" duration-ms="454" started-at="2021-12-15T09:40:16Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-15T09:40:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Cshayan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="658" started-at="2021-12-15T09:40:16Z" finished-at="2021-12-15T09:40:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="userLoginTestSensitive" duration-ms="351" started-at="2021-12-15T09:40:17Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-15T09:40:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Caa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="temp" is-config="true" duration-ms="616" started-at="2021-12-15T09:40:17Z" finished-at="2021-12-15T09:40:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="close()[pri:0, instance:mybank.testcases.DDUserLoginPageTest@2a17b7b6]" name="close" is-config="true" duration-ms="1579" started-at="2021-12-15T09:40:18Z" finished-at="2021-12-15T09:40:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- mybank.testcases.DDUserLoginPageTest -->
    </test> <!-- DDUserLoginPageTest -->
    <test name="PersonalDetailsPageTest" duration-ms="6615" started-at="2021-12-15T09:40:20Z" finished-at="2021-12-15T09:40:26Z">
      <class name="mybank.testcases.PersonalDetailsPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@1c3a4799]" name="beforeTest" is-config="true" duration-ms="2901" started-at="2021-12-15T09:40:20Z" finished-at="2021-12-15T09:40:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="personalDetailsTest()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@1c3a4799]" name="personalDetailsTest" duration-ms="3546" started-at="2021-12-15T09:40:22Z" finished-at="2021-12-15T09:40:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalDetailsTest -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@1c3a4799]" name="tear" is-config="true" duration-ms="167" started-at="2021-12-15T09:40:26Z" finished-at="2021-12-15T09:40:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.PersonalDetailsPageTest -->
    </test> <!-- PersonalDetailsPageTest -->
    <test name="TransactionRecordPageTest" duration-ms="10313" started-at="2021-12-15T09:40:26Z" finished-at="2021-12-15T09:40:37Z">
      <class name="mybank.testcases.TransactionRecordPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@51cdd8a]" name="beforeTest" is-config="true" duration-ms="4851" started-at="2021-12-15T09:40:26Z" finished-at="2021-12-15T09:40:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="TransactionRecordTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@51cdd8a]" name="TransactionRecordTest" duration-ms="3946" started-at="2021-12-15T09:40:31Z" finished-at="2021-12-15T09:40:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false],
expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at mybank.testcases.TransactionRecordPageTest.TransactionRecordTest(TransactionRecordPageTest.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionRecordTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.TransactionRecordPageTest@51cdd8a]" name="temp" is-config="true" duration-ms="165" started-at="2021-12-15T09:40:35Z" finished-at="2021-12-15T09:40:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TransactionRecordTest status=FAILURE method=TransactionRecordPageTest.TransactionRecordTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@51cdd8a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@51cdd8a]" name="tear" is-config="true" duration-ms="1351" started-at="2021-12-15T09:40:35Z" finished-at="2021-12-15T09:40:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.TransactionRecordPageTest -->
    </test> <!-- TransactionRecordPageTest -->
    <test name="WithdrawMoneyPageTest" duration-ms="5608" started-at="2021-12-15T09:40:37Z" finished-at="2021-12-15T09:40:42Z">
      <class name="mybank.testcases.WithdrawMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="beforeTest" is-config="true" duration-ms="2916" started-at="2021-12-15T09:40:37Z" finished-at="2021-12-15T09:40:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="requestAtmPageAvabilityTest()[pri:1, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="requestAtmPageAvabilityTest" duration-ms="1325" started-at="2021-12-15T09:40:39Z" finished-at="2021-12-15T09:40:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestAtmPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:41Z" finished-at="2021-12-15T09:40:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestAtmPageAvabilityTest status=SUCCESS method=WithdrawMoneyPageTest.requestAtmPageAvabilityTest()[pri:1, instance:mybank.testcases.WithdrawMoneyPageTest@48503868] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="Test2()[pri:2, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="Test2" duration-ms="260" started-at="2021-12-15T09:40:41Z" finished-at="2021-12-15T09:40:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-15T09:40:41Z" finished-at="2021-12-15T09:40:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test2 status=SUCCESS method=WithdrawMoneyPageTest.Test2()[pri:2, instance:mybank.testcases.WithdrawMoneyPageTest@48503868] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="Test3()[pri:3, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="Test3" duration-ms="252" started-at="2021-12-15T09:40:41Z" finished-at="2021-12-15T09:40:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.WithdrawMoneyPageTest.Test3(WithdrawMoneyPageTest.java:176)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="temp" is-config="true" duration-ms="140" started-at="2021-12-15T09:40:41Z" finished-at="2021-12-15T09:40:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test3 status=FAILURE method=WithdrawMoneyPageTest.Test3()[pri:3, instance:mybank.testcases.WithdrawMoneyPageTest@48503868] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="Test4()[pri:4, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="Test4" duration-ms="249" started-at="2021-12-15T09:40:41Z" finished-at="2021-12-15T09:40:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.WithdrawMoneyPageTest.Test4(WithdrawMoneyPageTest.java:213)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="temp" is-config="true" duration-ms="120" started-at="2021-12-15T09:40:42Z" finished-at="2021-12-15T09:40:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test4 status=FAILURE method=WithdrawMoneyPageTest.Test4()[pri:4, instance:mybank.testcases.WithdrawMoneyPageTest@48503868] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="Test5()[pri:5, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="Test5" duration-ms="232" started-at="2021-12-15T09:40:42Z" finished-at="2021-12-15T09:40:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test5 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-15T09:40:42Z" finished-at="2021-12-15T09:40:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test5 status=SUCCESS method=WithdrawMoneyPageTest.Test5()[pri:5, instance:mybank.testcases.WithdrawMoneyPageTest@48503868] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@48503868]" name="ShutDown" is-config="true" duration-ms="109" started-at="2021-12-15T09:40:42Z" finished-at="2021-12-15T09:40:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.WithdrawMoneyPageTest -->
    </test> <!-- WithdrawMoneyPageTest -->
    <test name="HomePageTest" duration-ms="33688" started-at="2021-12-15T09:40:42Z" finished-at="2021-12-15T09:41:16Z">
      <class name="mybank.testcases.HomePageTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.HomePageTest@394e1a0f]" name="beforeSuite" is-config="true" duration-ms="3200" started-at="2021-12-15T09:40:42Z" finished-at="2021-12-15T09:40:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="LoginTest()[pri:0, instance:mybank.testcases.HomePageTest@394e1a0f]" name="LoginTest" duration-ms="1022" started-at="2021-12-15T09:40:45Z" finished-at="2021-12-15T09:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="mybankLogoClickTest()[pri:1, instance:mybank.testcases.HomePageTest@394e1a0f]" name="mybankLogoClickTest" duration-ms="113" started-at="2021-12-15T09:40:46Z" finished-at="2021-12-15T09:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybankLogoClickTest -->
        <test-method status="PASS" signature="homeClickTest()[pri:2, instance:mybank.testcases.HomePageTest@394e1a0f]" name="homeClickTest" duration-ms="103" started-at="2021-12-15T09:40:47Z" finished-at="2021-12-15T09:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeClickTest -->
        <test-method status="PASS" signature="featuresClickTest()[pri:3, instance:mybank.testcases.HomePageTest@394e1a0f]" name="featuresClickTest" duration-ms="183" started-at="2021-12-15T09:40:47Z" finished-at="2021-12-15T09:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- featuresClickTest -->
        <test-method status="PASS" signature="aboutFAQsClickTest()[pri:4, instance:mybank.testcases.HomePageTest@394e1a0f]" name="aboutFAQsClickTest" duration-ms="260" started-at="2021-12-15T09:40:47Z" finished-at="2021-12-15T09:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aboutFAQsClickTest -->
        <test-method status="PASS" signature="contactUsClickTest()[pri:5, instance:mybank.testcases.HomePageTest@394e1a0f]" name="contactUsClickTest" duration-ms="203" started-at="2021-12-15T09:40:47Z" finished-at="2021-12-15T09:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactUsClickTest -->
        <test-method status="PASS" signature="safetyBankingTipsClickTest()[pri:6, instance:mybank.testcases.HomePageTest@394e1a0f]" name="safetyBankingTipsClickTest" duration-ms="249" started-at="2021-12-15T09:40:47Z" finished-at="2021-12-15T09:40:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safetyBankingTipsClickTest -->
        <test-method status="PASS" signature="adminLoginClickTest()[pri:7, instance:mybank.testcases.HomePageTest@394e1a0f]" name="adminLoginClickTest" duration-ms="208" started-at="2021-12-15T09:40:48Z" finished-at="2021-12-15T09:40:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLoginClickTest -->
        <test-method status="PASS" signature="loginClickTest()[pri:8, instance:mybank.testcases.HomePageTest@394e1a0f]" name="loginClickTest" duration-ms="188" started-at="2021-12-15T09:40:48Z" finished-at="2021-12-15T09:40:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginClickTest -->
        <test-method status="PASS" signature="signUpClickTest()[pri:9, instance:mybank.testcases.HomePageTest@394e1a0f]" name="signUpClickTest" duration-ms="201" started-at="2021-12-15T09:40:48Z" finished-at="2021-12-15T09:40:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpClickTest -->
        <test-method status="FAIL" signature="contactUsTest()[pri:10, instance:mybank.testcases.HomePageTest@394e1a0f]" name="contactUsTest" duration-ms="395" started-at="2021-12-15T09:40:48Z" finished-at="2021-12-15T09:40:49Z">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=96.0.4664.93)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'NGL001340', ip: '192.168.0.106', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3f6d50f4d80f17e1927284849c78c30b, clickElement {id=80f44ef7-5dc1-49ca-ade6-8d578505a35f}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\YASH_S~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51978}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51978/devtoo..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (3f6d50f4d80f17e1927284849c78c30b)] -> css selector: .col-sm-4:nth-child(1) > h3]
Session ID: 3f6d50f4d80f17e1927284849c78c30b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=96.0.4664.93)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'NGL001340', ip: '192.168.0.106', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [3f6d50f4d80f17e1927284849c78c30b, clickElement {id=80f44ef7-5dc1-49ca-ade6-8d578505a35f}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\YASH_S~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51978}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:51978/devtoo..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (3f6d50f4d80f17e1927284849c78c30b)] -> css selector: .col-sm-4:nth-child(1) > h3]
Session ID: 3f6d50f4d80f17e1927284849c78c30b
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at mybank.testcases.HomePageTest.contactUsTest(HomePageTest.java:299)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactUsTest -->
        <test-method status="PASS" signature="redirectSafetyTips()[pri:11, instance:mybank.testcases.HomePageTest@394e1a0f]" name="redirectSafetyTips" duration-ms="279" started-at="2021-12-15T09:40:49Z" finished-at="2021-12-15T09:40:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectSafetyTips -->
        <test-method status="PASS" signature="redirectFacebook()[pri:12, instance:mybank.testcases.HomePageTest@394e1a0f]" name="redirectFacebook" duration-ms="1966" started-at="2021-12-15T09:40:49Z" finished-at="2021-12-15T09:40:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectFacebook -->
        <test-method status="PASS" signature="redirectTwitter()[pri:13, instance:mybank.testcases.HomePageTest@394e1a0f]" name="redirectTwitter" duration-ms="5439" started-at="2021-12-15T09:40:51Z" finished-at="2021-12-15T09:40:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectTwitter -->
        <test-method status="PASS" signature="redirectYoutube()[pri:14, instance:mybank.testcases.HomePageTest@394e1a0f]" name="redirectYoutube" duration-ms="7688" started-at="2021-12-15T09:40:56Z" finished-at="2021-12-15T09:41:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectYoutube -->
        <test-method status="PASS" signature="redirectGoogle()[pri:15, instance:mybank.testcases.HomePageTest@394e1a0f]" name="redirectGoogle" duration-ms="1906" started-at="2021-12-15T09:41:04Z" finished-at="2021-12-15T09:41:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectGoogle -->
        <test-method status="PASS" signature="redirectInstagram()[pri:16, instance:mybank.testcases.HomePageTest@394e1a0f]" name="redirectInstagram" duration-ms="4185" started-at="2021-12-15T09:41:06Z" finished-at="2021-12-15T09:41:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectInstagram -->
        <test-method status="PASS" signature="redirectLinkedIn()[pri:17, instance:mybank.testcases.HomePageTest@394e1a0f]" name="redirectLinkedIn" duration-ms="2386" started-at="2021-12-15T09:41:10Z" finished-at="2021-12-15T09:41:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectLinkedIn -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.HomePageTest@394e1a0f]" name="tear" is-config="true" duration-ms="3504" started-at="2021-12-15T09:41:12Z" finished-at="2021-12-15T09:41:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.HomePageTest -->
    </test> <!-- HomePageTest -->
    <test name="SignUpPageTest" duration-ms="8505" started-at="2021-12-15T09:41:16Z" finished-at="2021-12-15T09:41:24Z">
      <class name="mybank.testcases.SignUpPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.SignUpPageTest@53f65459]" name="setUp" is-config="true" duration-ms="3178" started-at="2021-12-15T09:41:16Z" finished-at="2021-12-15T09:41:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="EnterData()[pri:1, instance:mybank.testcases.SignUpPageTest@53f65459]" name="EnterData" duration-ms="3853" started-at="2021-12-15T09:41:19Z" finished-at="2021-12-15T09:41:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterData -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.SignUpPageTest@53f65459]" name="tear" is-config="true" duration-ms="1474" started-at="2021-12-15T09:41:23Z" finished-at="2021-12-15T09:41:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.SignUpPageTest -->
    </test> <!-- SignUpPageTest -->
    <test name="SignUpPageValidationTest" duration-ms="7416" started-at="2021-12-15T09:41:24Z" finished-at="2021-12-15T09:41:32Z">
      <class name="mybank.testcases.SignUpPageValidationTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf]" name="setup" is-config="true" duration-ms="176" started-at="2021-12-15T09:38:54Z" finished-at="2021-12-15T09:38:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf]" name="setUp" is-config="true" duration-ms="2872" started-at="2021-12-15T09:41:24Z" finished-at="2021-12-15T09:41:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="SignUpWithInvalidEmailId()[pri:1, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf]" name="SignUpWithInvalidEmailId" duration-ms="2817" started-at="2021-12-15T09:41:27Z" finished-at="2021-12-15T09:41:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpWithInvalidEmailId -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-12-15T09:41:30Z" finished-at="2021-12-15T09:41:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignUpWithInvalidEmailId status=SUCCESS method=SignUpPageValidationTest.SignUpWithInvalidEmailId()[pri:1, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="signWithInvalidAccNumber()[pri:2, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf]" name="signWithInvalidAccNumber" duration-ms="369" started-at="2021-12-15T09:41:30Z" finished-at="2021-12-15T09:41:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signWithInvalidAccNumber -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf]" name="afterMethod" is-config="true" duration-ms="0" started-at="2021-12-15T09:41:30Z" finished-at="2021-12-15T09:41:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signWithInvalidAccNumber status=SUCCESS method=SignUpPageValidationTest.signWithInvalidAccNumber()[pri:2, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf]" name="tear" is-config="true" duration-ms="1357" started-at="2021-12-15T09:41:30Z" finished-at="2021-12-15T09:41:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mybank.testcases.SignUpPageValidationTest@59e5ddf]" name="tearDown" is-config="true" duration-ms="464" started-at="2021-12-15T09:41:32Z" finished-at="2021-12-15T09:41:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mybank.testcases.SignUpPageValidationTest -->
    </test> <!-- SignUpPageValidationTest -->
  </suite> <!-- MultipleSuite -->
</testng-results>
