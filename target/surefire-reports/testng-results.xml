<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="38" ignored="0" total="80" passed="42">
  <reporter-output>
  </reporter-output>
  <suite name="MybankTestSuite" duration-ms="175820" started-at="2021-12-17T11:22:36Z" finished-at="2021-12-17T11:25:31Z">
    <groups>
    </groups>
    <test name="UserLoginPageTest" duration-ms="9087" started-at="2021-12-17T11:22:36Z" finished-at="2021-12-17T11:22:45Z">
      <class name="mybank.testcases.UserLoginPageTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.UserLoginPageTest@5383967b]" name="beforeSuite" is-config="true" duration-ms="6238" started-at="2021-12-17T11:22:36Z" finished-at="2021-12-17T11:22:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="LoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.UserLoginPageTest@5383967b]" name="LoginTest" duration-ms="1184" started-at="2021-12-17T11:22:42Z" data-provider="Dataset" finished-at="2021-12-17T11:22:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.UserLoginPageTest@5383967b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:22:43Z" finished-at="2021-12-17T11:22:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=UserLoginPageTest.LoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.UserLoginPageTest@5383967b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.UserLoginPageTest@5383967b]" name="tear" is-config="true" duration-ms="1622" started-at="2021-12-17T11:22:43Z" finished-at="2021-12-17T11:22:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.UserLoginPageTest -->
    </test> <!-- UserLoginPageTest -->
    <test name="RequestAtmPageTest" duration-ms="6500" started-at="2021-12-17T11:22:45Z" finished-at="2021-12-17T11:22:51Z">
      <class name="mybank.testcases.RequestAtmPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.RequestAtmPageTest@7d907bac]" name="beforeTest" is-config="true" duration-ms="3183" started-at="2021-12-17T11:22:45Z" finished-at="2021-12-17T11:22:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="requestAtmPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.RequestAtmPageTest@7d907bac]" name="requestAtmPageAvabilityTest" duration-ms="2008" started-at="2021-12-17T11:22:48Z" data-provider="Dataset" finished-at="2021-12-17T11:22:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestAtmPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.RequestAtmPageTest@7d907bac]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:22:50Z" finished-at="2021-12-17T11:22:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestAtmPageAvabilityTest status=SUCCESS method=RequestAtmPageTest.requestAtmPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.RequestAtmPageTest@7d907bac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.RequestAtmPageTest@7d907bac]" name="ShutDown" is-config="true" duration-ms="1308" started-at="2021-12-17T11:22:50Z" finished-at="2021-12-17T11:22:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.RequestAtmPageTest -->
    </test> <!-- RequestAtmPageTest -->
    <test name="AdminPageDDTest" duration-ms="5993" started-at="2021-12-17T11:22:51Z" finished-at="2021-12-17T11:22:57Z">
      <class name="mybank.testcases.AdminPageDDTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.AdminPageDDTest@4f970963]" name="beforeSuite" is-config="true" duration-ms="3246" started-at="2021-12-17T11:22:51Z" finished-at="2021-12-17T11:22:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="adminLoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminPageDDTest@4f970963]" name="adminLoginTest" duration-ms="1138" started-at="2021-12-17T11:22:54Z" data-provider="Dataset" finished-at="2021-12-17T11:22:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLoginTest -->
        <test-method status="PASS" signature="quit()[pri:0, instance:mybank.testcases.AdminPageDDTest@4f970963]" name="quit" is-config="true" duration-ms="1607" started-at="2021-12-17T11:22:56Z" finished-at="2021-12-17T11:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AdminPageDDTest@4f970963]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:22:56Z" finished-at="2021-12-17T11:22:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=adminLoginTest status=SUCCESS method=AdminPageDDTest.adminLoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminPageDDTest@4f970963] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.AdminPageDDTest -->
    </test> <!-- AdminPageDDTest -->
    <test name="AdminRegisteredUsersPageTest" duration-ms="6555" started-at="2021-12-17T11:22:57Z" finished-at="2021-12-17T11:23:04Z">
      <class name="mybank.testcases.AdminRegisteredUsersPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@5ae63ade]" name="beforeTest" is-config="true" duration-ms="3108" started-at="2021-12-17T11:22:57Z" finished-at="2021-12-17T11:23:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="registeredUserPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@5ae63ade]" name="registeredUserPageAvabilityTest" duration-ms="2037" started-at="2021-12-17T11:23:00Z" data-provider="Dataset" finished-at="2021-12-17T11:23:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registeredUserPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@5ae63ade]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:23:02Z" finished-at="2021-12-17T11:23:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registeredUserPageAvabilityTest status=SUCCESS method=AdminRegisteredUsersPageTest.registeredUserPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@5ae63ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@5ae63ade]" name="ShutDown" is-config="true" duration-ms="1408" started-at="2021-12-17T11:23:02Z" finished-at="2021-12-17T11:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.AdminRegisteredUsersPageTest -->
    </test> <!-- AdminRegisteredUsersPageTest -->
    <test name="ApproveMoneyToUserAccountPageTest" duration-ms="6354" started-at="2021-12-17T11:23:04Z" finished-at="2021-12-17T11:23:10Z">
      <class name="mybank.testcases.ApproveMoneyToUserAccountPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@2758fe70]" name="beforeTest" is-config="true" duration-ms="3308" started-at="2021-12-17T11:23:04Z" finished-at="2021-12-17T11:23:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="approveMoneyToUserAccountPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@2758fe70]" name="approveMoneyToUserAccountPageAvabilityTest" duration-ms="1568" started-at="2021-12-17T11:23:07Z" data-provider="Dataset" finished-at="2021-12-17T11:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- approveMoneyToUserAccountPageAvabilityTest -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@2758fe70]" name="ShutDown" is-config="true" duration-ms="1477" started-at="2021-12-17T11:23:09Z" finished-at="2021-12-17T11:23:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@2758fe70]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:09Z" finished-at="2021-12-17T11:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=approveMoneyToUserAccountPageAvabilityTest status=SUCCESS method=ApproveMoneyToUserAccountPageTest.approveMoneyToUserAccountPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@2758fe70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.ApproveMoneyToUserAccountPageTest -->
    </test> <!-- ApproveMoneyToUserAccountPageTest -->
    <test name="ApproveWithdrawalOfMoneyPageTest" duration-ms="6299" started-at="2021-12-17T11:23:10Z" finished-at="2021-12-17T11:23:16Z">
      <class name="mybank.testcases.ApproveWithdrawalOfMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@6e6c3152]" name="beforeTest" is-config="true" duration-ms="3150" started-at="2021-12-17T11:23:10Z" finished-at="2021-12-17T11:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="approveWithdrawalOfMoneyPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@6e6c3152]" name="approveWithdrawalOfMoneyPageAvabilityTest" duration-ms="1682" started-at="2021-12-17T11:23:13Z" data-provider="Dataset" finished-at="2021-12-17T11:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- approveWithdrawalOfMoneyPageAvabilityTest -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@6e6c3152]" name="ShutDown" is-config="true" duration-ms="1464" started-at="2021-12-17T11:23:15Z" finished-at="2021-12-17T11:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@6e6c3152]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:15Z" finished-at="2021-12-17T11:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=approveWithdrawalOfMoneyPageAvabilityTest status=SUCCESS method=ApproveWithdrawalOfMoneyPageTest.approveWithdrawalOfMoneyPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@6e6c3152] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.ApproveWithdrawalOfMoneyPageTest -->
    </test> <!-- ApproveWithdrawalOfMoneyPageTest -->
    <test name="AdminAtmCardReqPageTest" duration-ms="6297" started-at="2021-12-17T11:23:16Z" finished-at="2021-12-17T11:23:23Z">
      <class name="mybank.testcases.AdminAtmCardReqPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@3a883ce7]" name="beforeTest" is-config="true" duration-ms="3243" started-at="2021-12-17T11:23:16Z" finished-at="2021-12-17T11:23:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="adminATMReqPageTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@3a883ce7]" name="adminATMReqPageTest" duration-ms="1686" started-at="2021-12-17T11:23:20Z" data-provider="Dataset" finished-at="2021-12-17T11:23:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminATMReqPageTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@3a883ce7]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:21Z" finished-at="2021-12-17T11:23:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=adminATMReqPageTest status=SUCCESS method=AdminAtmCardReqPageTest.adminATMReqPageTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@3a883ce7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@3a883ce7]" name="ShutDown" is-config="true" duration-ms="1368" started-at="2021-12-17T11:23:21Z" finished-at="2021-12-17T11:23:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.AdminAtmCardReqPageTest -->
    </test> <!-- AdminAtmCardReqPageTest -->
    <test name="AddMoneyPageTest" duration-ms="7333" started-at="2021-12-17T11:23:23Z" finished-at="2021-12-17T11:23:30Z">
      <class name="mybank.testcases.AddMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="beforeTest" is-config="true" duration-ms="3159" started-at="2021-12-17T11:23:23Z" finished-at="2021-12-17T11:23:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addMoneyPageAvabilityTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="addMoneyPageAvabilityTest" duration-ms="1636" started-at="2021-12-17T11:23:26Z" data-provider="Dataset" finished-at="2021-12-17T11:23:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMoneyPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:28Z" finished-at="2021-12-17T11:23:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMoneyPageAvabilityTest status=SUCCESS method=AddMoneyPageTest.addMoneyPageAvabilityTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test2(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="test2" duration-ms="479" started-at="2021-12-17T11:23:28Z" data-provider="Dataset" finished-at="2021-12-17T11:23:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:28Z" finished-at="2021-12-17T11:23:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=AddMoneyPageTest.test2(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test3(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="test3" duration-ms="362" started-at="2021-12-17T11:23:28Z" data-provider="Dataset" finished-at="2021-12-17T11:23:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:28Z" finished-at="2021-12-17T11:23:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SUCCESS method=AddMoneyPageTest.test3(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test4(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="test4" duration-ms="323" started-at="2021-12-17T11:23:28Z" data-provider="Dataset" finished-at="2021-12-17T11:23:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:29Z" finished-at="2021-12-17T11:23:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4 status=SUCCESS method=AddMoneyPageTest.test4(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AddMoneyPageTest@72b6cbcc]" name="ShutDown" is-config="true" duration-ms="1367" started-at="2021-12-17T11:23:29Z" finished-at="2021-12-17T11:23:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.AddMoneyPageTest -->
    </test> <!-- AddMoneyPageTest -->
    <test name="AddBeneficiaryPageTest" duration-ms="9378" started-at="2021-12-17T11:23:30Z" finished-at="2021-12-17T11:23:39Z">
      <class name="mybank.testcases.AddBeneficiaryPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@9660f4e]" name="beforeTest" is-config="true" duration-ms="3122" started-at="2021-12-17T11:23:30Z" finished-at="2021-12-17T11:23:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addBeneficiaryTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.AddBeneficiaryPageTest@9660f4e]" name="addBeneficiaryTest" duration-ms="4136" started-at="2021-12-17T11:23:33Z" data-provider="Dataset" finished-at="2021-12-17T11:23:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBeneficiaryTest -->
        <test-method status="PASS" signature="invalidCredentialsTest(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.AddBeneficiaryPageTest@9660f4e]" name="invalidCredentialsTest" duration-ms="693" started-at="2021-12-17T11:23:37Z" data-provider="Dataset" finished-at="2021-12-17T11:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialsTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@9660f4e]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:37Z" finished-at="2021-12-17T11:23:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBeneficiaryTest status=SUCCESS method=AddBeneficiaryPageTest.addBeneficiaryTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.AddBeneficiaryPageTest@9660f4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@9660f4e]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:23:38Z" finished-at="2021-12-17T11:23:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidCredentialsTest status=SUCCESS method=AddBeneficiaryPageTest.invalidCredentialsTest(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.AddBeneficiaryPageTest@9660f4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@9660f4e]" name="afterTest" is-config="true" duration-ms="1425" started-at="2021-12-17T11:23:38Z" finished-at="2021-12-17T11:23:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- mybank.testcases.AddBeneficiaryPageTest -->
    </test> <!-- AddBeneficiaryPageTest -->
    <test name="DDUserLoginPageTest" duration-ms="41709" started-at="2021-12-17T11:23:40Z" finished-at="2021-12-17T11:24:21Z">
      <class name="mybank.testcases.DDUserLoginPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="setUp" is-config="true" duration-ms="3316" started-at="2021-12-17T11:23:40Z" finished-at="2021-12-17T11:23:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcorrectData" duration-ms="903" started-at="2021-12-17T11:23:46Z" data-provider="LoginData" finished-at="2021-12-17T11:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ankita@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcorrectData" duration-ms="335" started-at="2021-12-17T11:23:47Z" data-provider="LoginData" finished-at="2021-12-17T11:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ashish@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:47Z" finished-at="2021-12-17T11:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:47Z" finished-at="2021-12-17T11:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcorrectData" duration-ms="424" started-at="2021-12-17T11:23:47Z" data-provider="LoginData" finished-at="2021-12-17T11:23:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mayur@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcorrectData(DDUserLoginPageTest.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="1037" started-at="2021-12-17T11:23:47Z" finished-at="2021-12-17T11:23:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcorrectData" duration-ms="377" started-at="2021-12-17T11:23:48Z" data-provider="LoginData" finished-at="2021-12-17T11:23:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[apurba@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:23:49Z" finished-at="2021-12-17T11:23:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcorrectData" duration-ms="396" started-at="2021-12-17T11:23:49Z" data-provider="LoginData" finished-at="2021-12-17T11:23:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shubhangi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:49Z" finished-at="2021-12-17T11:23:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcorrectData" duration-ms="465" started-at="2021-12-17T11:23:49Z" data-provider="LoginData" finished-at="2021-12-17T11:23:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bhai@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:23:50Z" finished-at="2021-12-17T11:23:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcorrectData" duration-ms="393" started-at="2021-12-17T11:23:50Z" data-provider="LoginData" finished-at="2021-12-17T11:23:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcorrectData(DDUserLoginPageTest.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="691" started-at="2021-12-17T11:23:50Z" finished-at="2021-12-17T11:23:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcorrectData" duration-ms="308" started-at="2021-12-17T11:23:51Z" data-provider="LoginData" finished-at="2021-12-17T11:23:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcorrectData(DDUserLoginPageTest.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="804" started-at="2021-12-17T11:23:51Z" finished-at="2021-12-17T11:23:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongData" duration-ms="331" started-at="2021-12-17T11:23:52Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T11:23:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[seema@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="663" started-at="2021-12-17T11:23:53Z" finished-at="2021-12-17T11:23:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongData" duration-ms="309" started-at="2021-12-17T11:23:53Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T11:23:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sachin@mail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="631" started-at="2021-12-17T11:23:54Z" finished-at="2021-12-17T11:23:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongData" duration-ms="308" started-at="2021-12-17T11:23:54Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T11:23:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sakshi@reddif.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="615" started-at="2021-12-17T11:23:55Z" finished-at="2021-12-17T11:23:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongData" duration-ms="290" started-at="2021-12-17T11:23:55Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T11:23:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amit@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="533" started-at="2021-12-17T11:23:56Z" finished-at="2021-12-17T11:23:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongData" duration-ms="295" started-at="2021-12-17T11:23:56Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T11:23:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kunal@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pas123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="566" started-at="2021-12-17T11:23:56Z" finished-at="2021-12-17T11:23:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongData" duration-ms="220" started-at="2021-12-17T11:23:57Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T11:23:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[yash3344@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass334]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="471" started-at="2021-12-17T11:23:57Z" finished-at="2021-12-17T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongData" duration-ms="236" started-at="2021-12-17T11:23:58Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ankit@33.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="515" started-at="2021-12-17T11:23:58Z" finished-at="2021-12-17T11:23:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongEmail" duration-ms="304" started-at="2021-12-17T11:23:59Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T11:23:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cyan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="700" started-at="2021-12-17T11:23:59Z" finished-at="2021-12-17T11:24:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongEmail" duration-ms="264" started-at="2021-12-17T11:24:00Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T11:24:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gaaaaa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="561" started-at="2021-12-17T11:24:00Z" finished-at="2021-12-17T11:24:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongEmail" duration-ms="300" started-at="2021-12-17T11:24:01Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T11:24:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sayantaaan1999arka@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaaa]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="549" started-at="2021-12-17T11:24:01Z" finished-at="2021-12-17T11:24:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongEmail" duration-ms="294" started-at="2021-12-17T11:24:01Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T11:24:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shayandff90@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="724" started-at="2021-12-17T11:24:02Z" finished-at="2021-12-17T11:24:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongEmail" duration-ms="558" started-at="2021-12-17T11:24:03Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T11:24:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@ghmmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="809" started-at="2021-12-17T11:24:03Z" finished-at="2021-12-17T11:24:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongEmail" duration-ms="450" started-at="2021-12-17T11:24:04Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T11:24:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[juli@haaa.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="757" started-at="2021-12-17T11:24:04Z" finished-at="2021-12-17T11:24:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongEmail" duration-ms="400" started-at="2021-12-17T11:24:05Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T11:24:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jhon@vmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="555" started-at="2021-12-17T11:24:05Z" finished-at="2021-12-17T11:24:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongEmail" duration-ms="253" started-at="2021-12-17T11:24:06Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T11:24:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shubhanYasgi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="488" started-at="2021-12-17T11:24:06Z" finished-at="2021-12-17T11:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongPass" duration-ms="331" started-at="2021-12-17T11:24:07Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T11:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cshayan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="566" started-at="2021-12-17T11:24:07Z" finished-at="2021-12-17T11:24:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongPass" duration-ms="258" started-at="2021-12-17T11:24:08Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T11:24:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gaa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yash123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="511" started-at="2021-12-17T11:24:08Z" finished-at="2021-12-17T11:24:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongPass" duration-ms="308" started-at="2021-12-17T11:24:09Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T11:24:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sayantan1999arka@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bbbb]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="571" started-at="2021-12-17T11:24:09Z" finished-at="2021-12-17T11:24:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongPass" duration-ms="220" started-at="2021-12-17T11:24:10Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T11:24:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shayan90@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[none12]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="532" started-at="2021-12-17T11:24:10Z" finished-at="2021-12-17T11:24:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongPass" duration-ms="293" started-at="2021-12-17T11:24:10Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T11:24:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sapp]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="625" started-at="2021-12-17T11:24:11Z" finished-at="2021-12-17T11:24:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongPass" duration-ms="319" started-at="2021-12-17T11:24:11Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T11:24:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[juli@aa.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[root]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="546" started-at="2021-12-17T11:24:12Z" finished-at="2021-12-17T11:24:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongPass" duration-ms="211" started-at="2021-12-17T11:24:12Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T11:24:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jhon@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p123s]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="500" started-at="2021-12-17T11:24:12Z" finished-at="2021-12-17T11:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestWithcWrongPass" duration-ms="270" started-at="2021-12-17T11:24:13Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T11:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shubhangi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p55word]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="539" started-at="2021-12-17T11:24:13Z" finished-at="2021-12-17T11:24:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestSensitive" duration-ms="244" started-at="2021-12-17T11:24:14Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T11:24:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[csGHayan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="503" started-at="2021-12-17T11:24:14Z" finished-at="2021-12-17T11:24:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestSensitive" duration-ms="299" started-at="2021-12-17T11:24:15Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T11:24:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gaa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="564" started-at="2021-12-17T11:24:15Z" finished-at="2021-12-17T11:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestSensitive" duration-ms="274" started-at="2021-12-17T11:24:16Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T11:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sayantan1999arka@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaaa]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="471" started-at="2021-12-17T11:24:16Z" finished-at="2021-12-17T11:24:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestSensitive" duration-ms="324" started-at="2021-12-17T11:24:16Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T11:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shayan90@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:24:17Z" finished-at="2021-12-17T11:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=SUCCESS method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestSensitive" duration-ms="274" started-at="2021-12-17T11:24:17Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T11:24:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABC@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="713" started-at="2021-12-17T11:24:17Z" finished-at="2021-12-17T11:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestSensitive" duration-ms="239" started-at="2021-12-17T11:24:18Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T11:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[JUli@aa.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="466" started-at="2021-12-17T11:24:18Z" finished-at="2021-12-17T11:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestSensitive" duration-ms="216" started-at="2021-12-17T11:24:18Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T11:24:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[JHon@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="559" started-at="2021-12-17T11:24:19Z" finished-at="2021-12-17T11:24:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="userLoginTestSensitive" duration-ms="286" started-at="2021-12-17T11:24:19Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T11:24:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SHubhangi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="temp" is-config="true" duration-ms="492" started-at="2021-12-17T11:24:19Z" finished-at="2021-12-17T11:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@711f39f9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="close()[pri:0, instance:mybank.testcases.DDUserLoginPageTest@711f39f9]" name="close" is-config="true" duration-ms="1321" started-at="2021-12-17T11:24:20Z" finished-at="2021-12-17T11:24:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- mybank.testcases.DDUserLoginPageTest -->
    </test> <!-- DDUserLoginPageTest -->
    <test name="PersonalDetailsPageTest" duration-ms="5362" started-at="2021-12-17T11:24:21Z" finished-at="2021-12-17T11:24:27Z">
      <class name="mybank.testcases.PersonalDetailsPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@4e7dc304]" name="beforeTest" is-config="true" duration-ms="3054" started-at="2021-12-17T11:24:21Z" finished-at="2021-12-17T11:24:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="personalDetailsTest()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@4e7dc304]" name="personalDetailsTest" duration-ms="1945" started-at="2021-12-17T11:24:24Z" finished-at="2021-12-17T11:24:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Account Number Matches !! expected [987654321312] but found ["987654321312"]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Account Number Matches !! expected [987654321312] but found ["987654321312"]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at mybank.testcases.PersonalDetailsPageTest.personalDetailsTest(PersonalDetailsPageTest.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalDetailsTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@4e7dc304]" name="temp" is-config="true" duration-ms="126" started-at="2021-12-17T11:24:26Z" finished-at="2021-12-17T11:24:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=personalDetailsTest status=FAILURE method=PersonalDetailsPageTest.personalDetailsTest()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@4e7dc304] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@4e7dc304]" name="tear" is-config="true" duration-ms="236" started-at="2021-12-17T11:24:26Z" finished-at="2021-12-17T11:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.PersonalDetailsPageTest -->
    </test> <!-- PersonalDetailsPageTest -->
    <test name="TransactionRecordPageTest" duration-ms="6907" started-at="2021-12-17T11:24:27Z" finished-at="2021-12-17T11:24:34Z">
      <class name="mybank.testcases.TransactionRecordPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@1f7030a6]" name="beforeTest" is-config="true" duration-ms="3239" started-at="2021-12-17T11:24:27Z" finished-at="2021-12-17T11:24:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="TransactionRecordTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@1f7030a6]" name="TransactionRecordTest" duration-ms="2091" started-at="2021-12-17T11:24:30Z" finished-at="2021-12-17T11:24:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [true] but found [false],
Account Number Matches !! expected [987654321312] but found ["987654321312"]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [true] but found [false],
Account Number Matches !! expected [987654321312] but found ["987654321312"]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at mybank.testcases.TransactionRecordPageTest.TransactionRecordTest(TransactionRecordPageTest.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionRecordTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.TransactionRecordPageTest@1f7030a6]" name="temp" is-config="true" duration-ms="180" started-at="2021-12-17T11:24:32Z" finished-at="2021-12-17T11:24:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TransactionRecordTest status=FAILURE method=TransactionRecordPageTest.TransactionRecordTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@1f7030a6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@1f7030a6]" name="tear" is-config="true" duration-ms="1396" started-at="2021-12-17T11:24:32Z" finished-at="2021-12-17T11:24:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.TransactionRecordPageTest -->
    </test> <!-- TransactionRecordPageTest -->
    <test name="WithdrawMoneyPageTest" duration-ms="6024" started-at="2021-12-17T11:24:34Z" finished-at="2021-12-17T11:24:40Z">
      <class name="mybank.testcases.WithdrawMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="beforeTest" is-config="true" duration-ms="3047" started-at="2021-12-17T11:24:34Z" finished-at="2021-12-17T11:24:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="requestAtmPageAvabilityTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="requestAtmPageAvabilityTest" duration-ms="1443" started-at="2021-12-17T11:24:37Z" data-provider="Dataset" finished-at="2021-12-17T11:24:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestAtmPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:24:38Z" finished-at="2021-12-17T11:24:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestAtmPageAvabilityTest status=SUCCESS method=WithdrawMoneyPageTest.requestAtmPageAvabilityTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="Test2()[pri:2, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="Test2" duration-ms="403" started-at="2021-12-17T11:24:38Z" finished-at="2021-12-17T11:24:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:24:39Z" finished-at="2021-12-17T11:24:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test2 status=SUCCESS method=WithdrawMoneyPageTest.Test2()[pri:2, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="Test3()[pri:3, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="Test3" duration-ms="275" started-at="2021-12-17T11:24:39Z" finished-at="2021-12-17T11:24:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.WithdrawMoneyPageTest.Test3(WithdrawMoneyPageTest.java:181)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="temp" is-config="true" duration-ms="152" started-at="2021-12-17T11:24:39Z" finished-at="2021-12-17T11:24:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test3 status=FAILURE method=WithdrawMoneyPageTest.Test3()[pri:3, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="Test4()[pri:4, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="Test4" duration-ms="265" started-at="2021-12-17T11:24:39Z" finished-at="2021-12-17T11:24:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at mybank.testcases.WithdrawMoneyPageTest.Test4(WithdrawMoneyPageTest.java:219)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="temp" is-config="true" duration-ms="160" started-at="2021-12-17T11:24:39Z" finished-at="2021-12-17T11:24:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test4 status=FAILURE method=WithdrawMoneyPageTest.Test4()[pri:4, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="Test5()[pri:5, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="Test5" duration-ms="203" started-at="2021-12-17T11:24:39Z" finished-at="2021-12-17T11:24:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test5 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:24:40Z" finished-at="2021-12-17T11:24:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test5 status=SUCCESS method=WithdrawMoneyPageTest.Test5()[pri:5, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@167fdd33]" name="ShutDown" is-config="true" duration-ms="70" started-at="2021-12-17T11:24:40Z" finished-at="2021-12-17T11:24:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.WithdrawMoneyPageTest -->
    </test> <!-- WithdrawMoneyPageTest -->
    <test name="SignUpPageTest" duration-ms="11833" started-at="2021-12-17T11:24:40Z" finished-at="2021-12-17T11:24:52Z">
      <class name="mybank.testcases.SignUpPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.SignUpPageTest@15d0c81b]" name="setUp" is-config="true" duration-ms="3756" started-at="2021-12-17T11:24:40Z" finished-at="2021-12-17T11:24:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="EnterData()[pri:1, instance:mybank.testcases.SignUpPageTest@15d0c81b]" name="EnterData" duration-ms="6530" started-at="2021-12-17T11:24:44Z" finished-at="2021-12-17T11:24:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterData -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.SignUpPageTest@15d0c81b]" name="tear" is-config="true" duration-ms="1546" started-at="2021-12-17T11:24:51Z" finished-at="2021-12-17T11:24:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.SignUpPageTest@15d0c81b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:24:51Z" finished-at="2021-12-17T11:24:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterData status=SUCCESS method=SignUpPageTest.EnterData()[pri:1, instance:mybank.testcases.SignUpPageTest@15d0c81b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.SignUpPageTest -->
    </test> <!-- SignUpPageTest -->
    <test name="SignUpPageValidationTest" duration-ms="8413" started-at="2021-12-17T11:24:52Z" finished-at="2021-12-17T11:25:01Z">
      <class name="mybank.testcases.SignUpPageValidationTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.SignUpPageValidationTest@33f88ab]" name="setUp" is-config="true" duration-ms="3083" started-at="2021-12-17T11:24:52Z" finished-at="2021-12-17T11:24:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="SignUpWithInvalidEmailId()[pri:1, instance:mybank.testcases.SignUpPageValidationTest@33f88ab]" name="SignUpWithInvalidEmailId" duration-ms="1249" started-at="2021-12-17T11:24:55Z" finished-at="2021-12-17T11:24:57Z">
          <exception class="org.openqa.selenium.NoAlertPresentException">
            <message>
              <![CDATA[no such alert
  (Session info: chrome=96.0.4664.110)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'NGL001340', ip: '192.168.0.106', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d2e32ba35f1edae85abd93238a608952, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\YASH_S~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50234}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50234/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d2e32ba35f1edae85abd93238a608952]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoAlertPresentException: no such alert
  (Session info: chrome=96.0.4664.110)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'NGL001340', ip: '192.168.0.106', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d2e32ba35f1edae85abd93238a608952, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\YASH_S~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50234}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50234/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d2e32ba35f1edae85abd93238a608952
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:614)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.alert(RemoteWebDriver.java:1054)
at mybank.testcases.SignUpPageValidationTest.SignUpWithInvalidEmailId(SignUpPageValidationTest.java:73)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:373)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:334)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:407)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoAlertPresentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpWithInvalidEmailId -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.SignUpPageValidationTest@33f88ab]" name="temp" is-config="true" duration-ms="500" started-at="2021-12-17T11:24:57Z" finished-at="2021-12-17T11:24:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignUpWithInvalidEmailId status=FAILURE method=SignUpPageValidationTest.SignUpWithInvalidEmailId()[pri:1, instance:mybank.testcases.SignUpPageValidationTest@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="signWithInvalidAccNumber()[pri:2, instance:mybank.testcases.SignUpPageValidationTest@33f88ab]" name="signWithInvalidAccNumber" duration-ms="1911" started-at="2021-12-17T11:24:57Z" finished-at="2021-12-17T11:24:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signWithInvalidAccNumber -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.SignUpPageValidationTest@33f88ab]" name="tear" is-config="true" duration-ms="1667" started-at="2021-12-17T11:24:59Z" finished-at="2021-12-17T11:25:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.SignUpPageValidationTest@33f88ab]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:24:59Z" finished-at="2021-12-17T11:24:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signWithInvalidAccNumber status=SUCCESS method=SignUpPageValidationTest.signWithInvalidAccNumber()[pri:2, instance:mybank.testcases.SignUpPageValidationTest@33f88ab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.SignUpPageValidationTest -->
    </test> <!-- SignUpPageValidationTest -->
    <test name="HomePageTest" duration-ms="30712" started-at="2021-12-17T11:25:01Z" finished-at="2021-12-17T11:25:31Z">
      <class name="mybank.testcases.HomePageTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="setup" is-config="true" duration-ms="173" started-at="2021-12-17T11:22:35Z" finished-at="2021-12-17T11:22:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="beforeSuite" is-config="true" duration-ms="3142" started-at="2021-12-17T11:25:01Z" finished-at="2021-12-17T11:25:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="LoginTest()[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="LoginTest" duration-ms="1390" started-at="2021-12-17T11:25:04Z" finished-at="2021-12-17T11:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="mybankLogoClickTest()[pri:1, instance:mybank.testcases.HomePageTest@4232c52b]" name="mybankLogoClickTest" duration-ms="115" started-at="2021-12-17T11:25:05Z" finished-at="2021-12-17T11:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybankLogoClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:05Z" finished-at="2021-12-17T11:25:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=HomePageTest.LoginTest()[pri:0, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:05Z" finished-at="2021-12-17T11:25:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mybankLogoClickTest status=SUCCESS method=HomePageTest.mybankLogoClickTest()[pri:1, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="homeClickTest()[pri:2, instance:mybank.testcases.HomePageTest@4232c52b]" name="homeClickTest" duration-ms="109" started-at="2021-12-17T11:25:05Z" finished-at="2021-12-17T11:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:25:05Z" finished-at="2021-12-17T11:25:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homeClickTest status=SUCCESS method=HomePageTest.homeClickTest()[pri:2, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="featuresClickTest()[pri:3, instance:mybank.testcases.HomePageTest@4232c52b]" name="featuresClickTest" duration-ms="193" started-at="2021-12-17T11:25:05Z" finished-at="2021-12-17T11:25:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- featuresClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:06Z" finished-at="2021-12-17T11:25:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=featuresClickTest status=SUCCESS method=HomePageTest.featuresClickTest()[pri:3, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="aboutFAQsClickTest()[pri:4, instance:mybank.testcases.HomePageTest@4232c52b]" name="aboutFAQsClickTest" duration-ms="343" started-at="2021-12-17T11:25:06Z" finished-at="2021-12-17T11:25:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aboutFAQsClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:25:06Z" finished-at="2021-12-17T11:25:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aboutFAQsClickTest status=SUCCESS method=HomePageTest.aboutFAQsClickTest()[pri:4, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="contactUsClickTest()[pri:5, instance:mybank.testcases.HomePageTest@4232c52b]" name="contactUsClickTest" duration-ms="274" started-at="2021-12-17T11:25:06Z" finished-at="2021-12-17T11:25:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactUsClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:06Z" finished-at="2021-12-17T11:25:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactUsClickTest status=SUCCESS method=HomePageTest.contactUsClickTest()[pri:5, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="safetyBankingTipsClickTest()[pri:6, instance:mybank.testcases.HomePageTest@4232c52b]" name="safetyBankingTipsClickTest" duration-ms="281" started-at="2021-12-17T11:25:06Z" finished-at="2021-12-17T11:25:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safetyBankingTipsClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:25:06Z" finished-at="2021-12-17T11:25:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=safetyBankingTipsClickTest status=SUCCESS method=HomePageTest.safetyBankingTipsClickTest()[pri:6, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="adminLoginClickTest()[pri:7, instance:mybank.testcases.HomePageTest@4232c52b]" name="adminLoginClickTest" duration-ms="227" started-at="2021-12-17T11:25:06Z" finished-at="2021-12-17T11:25:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLoginClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:25:07Z" finished-at="2021-12-17T11:25:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=adminLoginClickTest status=SUCCESS method=HomePageTest.adminLoginClickTest()[pri:7, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="loginClickTest()[pri:8, instance:mybank.testcases.HomePageTest@4232c52b]" name="loginClickTest" duration-ms="239" started-at="2021-12-17T11:25:07Z" finished-at="2021-12-17T11:25:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:25:07Z" finished-at="2021-12-17T11:25:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginClickTest status=SUCCESS method=HomePageTest.loginClickTest()[pri:8, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="signUpClickTest()[pri:9, instance:mybank.testcases.HomePageTest@4232c52b]" name="signUpClickTest" duration-ms="338" started-at="2021-12-17T11:25:07Z" finished-at="2021-12-17T11:25:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:07Z" finished-at="2021-12-17T11:25:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpClickTest status=SUCCESS method=HomePageTest.signUpClickTest()[pri:9, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="contactUsTest()[pri:10, instance:mybank.testcases.HomePageTest@4232c52b]" name="contactUsTest" duration-ms="451" started-at="2021-12-17T11:25:07Z" finished-at="2021-12-17T11:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactUsTest -->
        <test-method status="PASS" signature="redirectSafetyTips()[pri:11, instance:mybank.testcases.HomePageTest@4232c52b]" name="redirectSafetyTips" duration-ms="241" started-at="2021-12-17T11:25:08Z" finished-at="2021-12-17T11:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectSafetyTips -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:08Z" finished-at="2021-12-17T11:25:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactUsTest status=SUCCESS method=HomePageTest.contactUsTest()[pri:10, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:08Z" finished-at="2021-12-17T11:25:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectSafetyTips status=SUCCESS method=HomePageTest.redirectSafetyTips()[pri:11, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectFacebook()[pri:12, instance:mybank.testcases.HomePageTest@4232c52b]" name="redirectFacebook" duration-ms="1649" started-at="2021-12-17T11:25:08Z" finished-at="2021-12-17T11:25:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectFacebook -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:10Z" finished-at="2021-12-17T11:25:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectFacebook status=SUCCESS method=HomePageTest.redirectFacebook()[pri:12, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectTwitter()[pri:13, instance:mybank.testcases.HomePageTest@4232c52b]" name="redirectTwitter" duration-ms="2996" started-at="2021-12-17T11:25:10Z" finished-at="2021-12-17T11:25:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectTwitter -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T11:25:13Z" finished-at="2021-12-17T11:25:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectTwitter status=SUCCESS method=HomePageTest.redirectTwitter()[pri:13, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectYoutube()[pri:14, instance:mybank.testcases.HomePageTest@4232c52b]" name="redirectYoutube" duration-ms="6565" started-at="2021-12-17T11:25:13Z" finished-at="2021-12-17T11:25:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectYoutube -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:19Z" finished-at="2021-12-17T11:25:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectYoutube status=SUCCESS method=HomePageTest.redirectYoutube()[pri:14, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectGoogle()[pri:15, instance:mybank.testcases.HomePageTest@4232c52b]" name="redirectGoogle" duration-ms="1615" started-at="2021-12-17T11:25:19Z" finished-at="2021-12-17T11:25:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectGoogle -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:21Z" finished-at="2021-12-17T11:25:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectGoogle status=SUCCESS method=HomePageTest.redirectGoogle()[pri:15, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectInstagram()[pri:16, instance:mybank.testcases.HomePageTest@4232c52b]" name="redirectInstagram" duration-ms="4324" started-at="2021-12-17T11:25:21Z" finished-at="2021-12-17T11:25:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectInstagram -->
        <test-method status="PASS" signature="redirectLinkedIn()[pri:17, instance:mybank.testcases.HomePageTest@4232c52b]" name="redirectLinkedIn" duration-ms="3841" started-at="2021-12-17T11:25:25Z" finished-at="2021-12-17T11:25:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectLinkedIn -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:25Z" finished-at="2021-12-17T11:25:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectInstagram status=SUCCESS method=HomePageTest.redirectInstagram()[pri:16, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T11:25:29Z" finished-at="2021-12-17T11:25:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectLinkedIn status=SUCCESS method=HomePageTest.redirectLinkedIn()[pri:17, instance:mybank.testcases.HomePageTest@4232c52b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="tear" is-config="true" duration-ms="2367" started-at="2021-12-17T11:25:29Z" finished-at="2021-12-17T11:25:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mybank.testcases.HomePageTest@4232c52b]" name="tearDown" is-config="true" duration-ms="468" started-at="2021-12-17T11:25:31Z" finished-at="2021-12-17T11:25:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mybank.testcases.HomePageTest -->
    </test> <!-- HomePageTest -->
  </suite> <!-- MybankTestSuite -->
</testng-results>
