<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="37" ignored="0" total="80" passed="43">
  <reporter-output>
  </reporter-output>
  <suite name="MybankTestSuite" duration-ms="159061" started-at="2021-12-17T12:32:33Z" finished-at="2021-12-17T12:35:12Z">
    <groups>
    </groups>
    <test name="UserLoginPageTest" duration-ms="7413" started-at="2021-12-17T12:32:33Z" finished-at="2021-12-17T12:32:40Z">
      <class name="mybank.testcases.UserLoginPageTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.UserLoginPageTest@1f57539]" name="beforeSuite" is-config="true" duration-ms="5076" started-at="2021-12-17T18:02:33Z" finished-at="2021-12-17T18:02:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="LoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.UserLoginPageTest@1f57539]" name="LoginTest" duration-ms="983" started-at="2021-12-17T18:02:38Z" data-provider="Dataset" finished-at="2021-12-17T18:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.UserLoginPageTest@1f57539]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T18:02:39Z" finished-at="2021-12-17T18:02:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=UserLoginPageTest.LoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.UserLoginPageTest@1f57539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.UserLoginPageTest@1f57539]" name="tear" is-config="true" duration-ms="1330" started-at="2021-12-17T18:02:39Z" finished-at="2021-12-17T18:02:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.UserLoginPageTest -->
    </test> <!-- UserLoginPageTest -->
    <test name="RequestAtmPageTest" duration-ms="5894" started-at="2021-12-17T12:32:40Z" finished-at="2021-12-17T12:32:46Z">
      <class name="mybank.testcases.RequestAtmPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.RequestAtmPageTest@2a556333]" name="beforeTest" is-config="true" duration-ms="2945" started-at="2021-12-17T18:02:40Z" finished-at="2021-12-17T18:02:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="requestAtmPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.RequestAtmPageTest@2a556333]" name="requestAtmPageAvabilityTest" duration-ms="1663" started-at="2021-12-17T18:02:43Z" data-provider="Dataset" finished-at="2021-12-17T18:02:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestAtmPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.RequestAtmPageTest@2a556333]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:02:45Z" finished-at="2021-12-17T18:02:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestAtmPageAvabilityTest status=SUCCESS method=RequestAtmPageTest.requestAtmPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.RequestAtmPageTest@2a556333] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.RequestAtmPageTest@2a556333]" name="ShutDown" is-config="true" duration-ms="1284" started-at="2021-12-17T18:02:45Z" finished-at="2021-12-17T18:02:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.RequestAtmPageTest -->
    </test> <!-- RequestAtmPageTest -->
    <test name="AdminPageDDTest" duration-ms="5645" started-at="2021-12-17T12:32:46Z" finished-at="2021-12-17T12:32:52Z">
      <class name="mybank.testcases.AdminPageDDTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.AdminPageDDTest@307f6b8c]" name="beforeSuite" is-config="true" duration-ms="3295" started-at="2021-12-17T18:02:46Z" finished-at="2021-12-17T18:02:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="adminLoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminPageDDTest@307f6b8c]" name="adminLoginTest" duration-ms="935" started-at="2021-12-17T18:02:50Z" data-provider="Dataset" finished-at="2021-12-17T18:02:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLoginTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AdminPageDDTest@307f6b8c]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:02:51Z" finished-at="2021-12-17T18:02:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=adminLoginTest status=SUCCESS method=AdminPageDDTest.adminLoginTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminPageDDTest@307f6b8c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="quit()[pri:0, instance:mybank.testcases.AdminPageDDTest@307f6b8c]" name="quit" is-config="true" duration-ms="1412" started-at="2021-12-17T18:02:51Z" finished-at="2021-12-17T18:02:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- mybank.testcases.AdminPageDDTest -->
    </test> <!-- AdminPageDDTest -->
    <test name="AdminRegisteredUsersPageTest" duration-ms="6233" started-at="2021-12-17T12:32:52Z" finished-at="2021-12-17T12:32:58Z">
      <class name="mybank.testcases.AdminRegisteredUsersPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@36b4cef0]" name="beforeTest" is-config="true" duration-ms="2915" started-at="2021-12-17T18:02:52Z" finished-at="2021-12-17T18:02:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="registeredUserPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@36b4cef0]" name="registeredUserPageAvabilityTest" duration-ms="1893" started-at="2021-12-17T18:02:55Z" data-provider="Dataset" finished-at="2021-12-17T18:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registeredUserPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@36b4cef0]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:02:57Z" finished-at="2021-12-17T18:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registeredUserPageAvabilityTest status=SUCCESS method=AdminRegisteredUsersPageTest.registeredUserPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@36b4cef0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AdminRegisteredUsersPageTest@36b4cef0]" name="ShutDown" is-config="true" duration-ms="1422" started-at="2021-12-17T18:02:57Z" finished-at="2021-12-17T18:02:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.AdminRegisteredUsersPageTest -->
    </test> <!-- AdminRegisteredUsersPageTest -->
    <test name="ApproveMoneyToUserAccountPageTest" duration-ms="6131" started-at="2021-12-17T12:32:58Z" finished-at="2021-12-17T12:33:04Z">
      <class name="mybank.testcases.ApproveMoneyToUserAccountPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@3e57cd70]" name="beforeTest" is-config="true" duration-ms="2844" started-at="2021-12-17T18:02:58Z" finished-at="2021-12-17T18:03:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="approveMoneyToUserAccountPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@3e57cd70]" name="approveMoneyToUserAccountPageAvabilityTest" duration-ms="1245" started-at="2021-12-17T18:03:01Z" data-provider="Dataset" finished-at="2021-12-17T18:03:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- approveMoneyToUserAccountPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@3e57cd70]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:02Z" finished-at="2021-12-17T18:03:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=approveMoneyToUserAccountPageAvabilityTest status=SUCCESS method=ApproveMoneyToUserAccountPageTest.approveMoneyToUserAccountPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@3e57cd70] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.ApproveMoneyToUserAccountPageTest@3e57cd70]" name="ShutDown" is-config="true" duration-ms="2040" started-at="2021-12-17T18:03:02Z" finished-at="2021-12-17T18:03:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.ApproveMoneyToUserAccountPageTest -->
    </test> <!-- ApproveMoneyToUserAccountPageTest -->
    <test name="ApproveWithdrawalOfMoneyPageTest" duration-ms="6025" started-at="2021-12-17T12:33:04Z" finished-at="2021-12-17T12:33:10Z">
      <class name="mybank.testcases.ApproveWithdrawalOfMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@38bc8ab5]" name="beforeTest" is-config="true" duration-ms="2871" started-at="2021-12-17T18:03:04Z" finished-at="2021-12-17T18:03:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="approveWithdrawalOfMoneyPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@38bc8ab5]" name="approveWithdrawalOfMoneyPageAvabilityTest" duration-ms="1559" started-at="2021-12-17T18:03:07Z" data-provider="Dataset" finished-at="2021-12-17T18:03:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- approveWithdrawalOfMoneyPageAvabilityTest -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@38bc8ab5]" name="ShutDown" is-config="true" duration-ms="1593" started-at="2021-12-17T18:03:09Z" finished-at="2021-12-17T18:03:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@38bc8ab5]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:09Z" finished-at="2021-12-17T18:03:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=approveWithdrawalOfMoneyPageAvabilityTest status=SUCCESS method=ApproveWithdrawalOfMoneyPageTest.approveWithdrawalOfMoneyPageAvabilityTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.ApproveWithdrawalOfMoneyPageTest@38bc8ab5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.ApproveWithdrawalOfMoneyPageTest -->
    </test> <!-- ApproveWithdrawalOfMoneyPageTest -->
    <test name="AdminAtmCardReqPageTest" duration-ms="5480" started-at="2021-12-17T12:33:11Z" finished-at="2021-12-17T12:33:16Z">
      <class name="mybank.testcases.AdminAtmCardReqPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@e874448]" name="beforeTest" is-config="true" duration-ms="3031" started-at="2021-12-17T18:03:11Z" finished-at="2021-12-17T18:03:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="adminATMReqPageTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@e874448]" name="adminATMReqPageTest" duration-ms="1145" started-at="2021-12-17T18:03:14Z" data-provider="Dataset" finished-at="2021-12-17T18:03:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminATMReqPageTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@e874448]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:15Z" finished-at="2021-12-17T18:03:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=adminATMReqPageTest status=SUCCESS method=AdminAtmCardReqPageTest.adminATMReqPageTest(java.lang.String, java.lang.String)[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@e874448] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AdminAtmCardReqPageTest@e874448]" name="ShutDown" is-config="true" duration-ms="1302" started-at="2021-12-17T18:03:15Z" finished-at="2021-12-17T18:03:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
      </class> <!-- mybank.testcases.AdminAtmCardReqPageTest -->
    </test> <!-- AdminAtmCardReqPageTest -->
    <test name="AddMoneyPageTest" duration-ms="6749" started-at="2021-12-17T12:33:16Z" finished-at="2021-12-17T12:33:23Z">
      <class name="mybank.testcases.AddMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="beforeTest" is-config="true" duration-ms="2780" started-at="2021-12-17T18:03:16Z" finished-at="2021-12-17T18:03:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addMoneyPageAvabilityTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="addMoneyPageAvabilityTest" duration-ms="1414" started-at="2021-12-17T18:03:19Z" data-provider="Dataset" finished-at="2021-12-17T18:03:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addMoneyPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:20Z" finished-at="2021-12-17T18:03:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addMoneyPageAvabilityTest status=SUCCESS method=AddMoneyPageTest.addMoneyPageAvabilityTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.AddMoneyPageTest@5bcea91b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test2(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="test2" duration-ms="472" started-at="2021-12-17T18:03:20Z" data-provider="Dataset" finished-at="2021-12-17T18:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:21Z" finished-at="2021-12-17T18:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=AddMoneyPageTest.test2(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.AddMoneyPageTest@5bcea91b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test3(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="test3" duration-ms="383" started-at="2021-12-17T18:03:21Z" data-provider="Dataset" finished-at="2021-12-17T18:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T18:03:21Z" finished-at="2021-12-17T18:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SUCCESS method=AddMoneyPageTest.test3(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.AddMoneyPageTest@5bcea91b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="test4(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="test4" duration-ms="365" started-at="2021-12-17T18:03:21Z" data-provider="Dataset" finished-at="2021-12-17T18:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="ShutDown" is-config="true" duration-ms="1329" started-at="2021-12-17T18:03:21Z" finished-at="2021-12-17T18:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddMoneyPageTest@5bcea91b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:21Z" finished-at="2021-12-17T18:03:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4 status=SUCCESS method=AddMoneyPageTest.test4(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.AddMoneyPageTest@5bcea91b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.AddMoneyPageTest -->
    </test> <!-- AddMoneyPageTest -->
    <test name="AddBeneficiaryPageTest" duration-ms="8373" started-at="2021-12-17T12:33:23Z" finished-at="2021-12-17T12:33:31Z">
      <class name="mybank.testcases.AddBeneficiaryPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@12f41634]" name="beforeTest" is-config="true" duration-ms="2796" started-at="2021-12-17T18:03:23Z" finished-at="2021-12-17T18:03:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="addBeneficiaryTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.AddBeneficiaryPageTest@12f41634]" name="addBeneficiaryTest" duration-ms="3613" started-at="2021-12-17T18:03:26Z" data-provider="Dataset" finished-at="2021-12-17T18:03:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addBeneficiaryTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@12f41634]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:29Z" finished-at="2021-12-17T18:03:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addBeneficiaryTest status=SUCCESS method=AddBeneficiaryPageTest.addBeneficiaryTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.AddBeneficiaryPageTest@12f41634] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="invalidCredentialsTest(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.AddBeneficiaryPageTest@12f41634]" name="invalidCredentialsTest" duration-ms="669" started-at="2021-12-17T18:03:29Z" data-provider="Dataset" finished-at="2021-12-17T18:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCredentialsTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@12f41634]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:30Z" finished-at="2021-12-17T18:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidCredentialsTest status=SUCCESS method=AddBeneficiaryPageTest.invalidCredentialsTest(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.AddBeneficiaryPageTest@12f41634] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:mybank.testcases.AddBeneficiaryPageTest@12f41634]" name="afterTest" is-config="true" duration-ms="1292" started-at="2021-12-17T18:03:30Z" finished-at="2021-12-17T18:03:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- mybank.testcases.AddBeneficiaryPageTest -->
    </test> <!-- AddBeneficiaryPageTest -->
    <test name="DDUserLoginPageTest" duration-ms="36549" started-at="2021-12-17T12:33:31Z" finished-at="2021-12-17T12:34:08Z">
      <class name="mybank.testcases.DDUserLoginPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="setUp" is-config="true" duration-ms="2852" started-at="2021-12-17T18:03:31Z" finished-at="2021-12-17T18:03:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcorrectData" duration-ms="1183" started-at="2021-12-17T18:03:36Z" data-provider="LoginData" finished-at="2021-12-17T18:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ankita@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcorrectData" duration-ms="382" started-at="2021-12-17T18:03:37Z" data-provider="LoginData" finished-at="2021-12-17T18:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ashish@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:37Z" finished-at="2021-12-17T18:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:37Z" finished-at="2021-12-17T18:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcorrectData" duration-ms="350" started-at="2021-12-17T18:03:37Z" data-provider="LoginData" finished-at="2021-12-17T18:03:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[mayur@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcorrectData(DDUserLoginPageTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="717" started-at="2021-12-17T18:03:38Z" finished-at="2021-12-17T18:03:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcorrectData" duration-ms="379" started-at="2021-12-17T18:03:38Z" data-provider="LoginData" finished-at="2021-12-17T18:03:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[apurba@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcorrectData" duration-ms="380" started-at="2021-12-17T18:03:39Z" data-provider="LoginData" finished-at="2021-12-17T18:03:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shubhangi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:39Z" finished-at="2021-12-17T18:03:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcorrectData" duration-ms="359" started-at="2021-12-17T18:03:39Z" data-provider="LoginData" finished-at="2021-12-17T18:03:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[bhai@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:39Z" finished-at="2021-12-17T18:03:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcorrectData" duration-ms="316" started-at="2021-12-17T18:03:40Z" data-provider="LoginData" finished-at="2021-12-17T18:03:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcorrectData(DDUserLoginPageTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:03:40Z" finished-at="2021-12-17T18:03:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=SUCCESS method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="643" started-at="2021-12-17T18:03:40Z" finished-at="2021-12-17T18:03:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcorrectData" duration-ms="301" started-at="2021-12-17T18:03:41Z" data-provider="LoginData" finished-at="2021-12-17T18:03:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcorrectData(DDUserLoginPageTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcorrectData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="567" started-at="2021-12-17T18:03:41Z" finished-at="2021-12-17T18:03:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcorrectData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcorrectData(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongData" duration-ms="407" started-at="2021-12-17T18:03:42Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T18:03:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[seema@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="601" started-at="2021-12-17T18:03:42Z" finished-at="2021-12-17T18:03:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongData" duration-ms="288" started-at="2021-12-17T18:03:43Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T18:03:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sachin@mail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="589" started-at="2021-12-17T18:03:43Z" finished-at="2021-12-17T18:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongData" duration-ms="377" started-at="2021-12-17T18:03:44Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T18:03:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sakshi@reddif.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[23123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="602" started-at="2021-12-17T18:03:44Z" finished-at="2021-12-17T18:03:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongData" duration-ms="331" started-at="2021-12-17T18:03:45Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T18:03:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amit@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="580" started-at="2021-12-17T18:03:45Z" finished-at="2021-12-17T18:03:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongData" duration-ms="279" started-at="2021-12-17T18:03:46Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T18:03:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[kunal@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pas123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="478" started-at="2021-12-17T18:03:46Z" finished-at="2021-12-17T18:03:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongData" duration-ms="237" started-at="2021-12-17T18:03:47Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T18:03:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[yash3344@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass334]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="501" started-at="2021-12-17T18:03:47Z" finished-at="2021-12-17T18:03:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongData" duration-ms="279" started-at="2021-12-17T18:03:47Z" data-provider="LoginWithWrongData" finished-at="2021-12-17T18:03:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ankit@33.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongData(DDUserLoginPageTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="534" started-at="2021-12-17T18:03:48Z" finished-at="2021-12-17T18:03:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongData status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongData(java.lang.String, java.lang.String)[pri:2, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongEmail" duration-ms="321" started-at="2021-12-17T18:03:48Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T18:03:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cyan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="527" started-at="2021-12-17T18:03:49Z" finished-at="2021-12-17T18:03:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongEmail" duration-ms="233" started-at="2021-12-17T18:03:49Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T18:03:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gaaaaa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="488" started-at="2021-12-17T18:03:49Z" finished-at="2021-12-17T18:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongEmail" duration-ms="229" started-at="2021-12-17T18:03:50Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T18:03:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sayantaaan1999arka@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaaa]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="518" started-at="2021-12-17T18:03:50Z" finished-at="2021-12-17T18:03:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongEmail" duration-ms="467" started-at="2021-12-17T18:03:51Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T18:03:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shayandff90@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="588" started-at="2021-12-17T18:03:51Z" finished-at="2021-12-17T18:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongEmail" duration-ms="293" started-at="2021-12-17T18:03:52Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T18:03:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@ghmmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="492" started-at="2021-12-17T18:03:52Z" finished-at="2021-12-17T18:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongEmail" duration-ms="267" started-at="2021-12-17T18:03:53Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T18:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[juli@haaa.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="533" started-at="2021-12-17T18:03:53Z" finished-at="2021-12-17T18:03:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongEmail" duration-ms="276" started-at="2021-12-17T18:03:53Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T18:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jhon@vmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="474" started-at="2021-12-17T18:03:54Z" finished-at="2021-12-17T18:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongEmail" duration-ms="227" started-at="2021-12-17T18:03:54Z" data-provider="LoginWithWrongEmail" finished-at="2021-12-17T18:03:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shubhanYasgi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongEmail(DDUserLoginPageTest.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongEmail -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="462" started-at="2021-12-17T18:03:54Z" finished-at="2021-12-17T18:03:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongEmail status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongEmail(java.lang.String, java.lang.String)[pri:3, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongPass" duration-ms="287" started-at="2021-12-17T18:03:55Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T18:03:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cshayan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ ]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="486" started-at="2021-12-17T18:03:55Z" finished-at="2021-12-17T18:03:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongPass" duration-ms="211" started-at="2021-12-17T18:03:56Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T18:03:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[gaa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[yash123]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="475" started-at="2021-12-17T18:03:56Z" finished-at="2021-12-17T18:03:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongPass" duration-ms="230" started-at="2021-12-17T18:03:57Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T18:03:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[sayantan1999arka@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bbbb]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="463" started-at="2021-12-17T18:03:57Z" finished-at="2021-12-17T18:03:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongPass" duration-ms="233" started-at="2021-12-17T18:03:57Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T18:03:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shayan90@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[none12]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="452" started-at="2021-12-17T18:03:57Z" finished-at="2021-12-17T18:03:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongPass" duration-ms="206" started-at="2021-12-17T18:03:58Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T18:03:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sapp]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="460" started-at="2021-12-17T18:03:58Z" finished-at="2021-12-17T18:03:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongPass" duration-ms="234" started-at="2021-12-17T18:03:59Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T18:03:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[juli@aa.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[root]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="477" started-at="2021-12-17T18:03:59Z" finished-at="2021-12-17T18:03:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongPass" duration-ms="256" started-at="2021-12-17T18:03:59Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T18:04:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Jhon@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p123s]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="466" started-at="2021-12-17T18:04:00Z" finished-at="2021-12-17T18:04:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestWithcWrongPass" duration-ms="247" started-at="2021-12-17T18:04:00Z" data-provider="LoginWithWrongPass" finished-at="2021-12-17T18:04:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shubhangi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p55word]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestWithcWrongPass(DDUserLoginPageTest.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestWithcWrongPass -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="452" started-at="2021-12-17T18:04:00Z" finished-at="2021-12-17T18:04:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestWithcWrongPass status=FAILURE method=DDUserLoginPageTest.userLoginTestWithcWrongPass(java.lang.String, java.lang.String)[pri:4, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestSensitive" duration-ms="268" started-at="2021-12-17T18:04:01Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T18:04:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[csGHayan@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="498" started-at="2021-12-17T18:04:01Z" finished-at="2021-12-17T18:04:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestSensitive" duration-ms="234" started-at="2021-12-17T18:04:02Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T18:04:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gaa@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="448" started-at="2021-12-17T18:04:02Z" finished-at="2021-12-17T18:04:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestSensitive" duration-ms="274" started-at="2021-12-17T18:04:02Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T18:04:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sayantan1999arka@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaaa]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="452" started-at="2021-12-17T18:04:03Z" finished-at="2021-12-17T18:04:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestSensitive" duration-ms="267" started-at="2021-12-17T18:04:03Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T18:04:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[shayan90@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestSensitive" duration-ms="242" started-at="2021-12-17T18:04:03Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T18:04:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABC@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:03Z" finished-at="2021-12-17T18:04:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=SUCCESS method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="473" started-at="2021-12-17T18:04:04Z" finished-at="2021-12-17T18:04:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestSensitive" duration-ms="224" started-at="2021-12-17T18:04:04Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T18:04:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[JUli@aa.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="476" started-at="2021-12-17T18:04:04Z" finished-at="2021-12-17T18:04:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestSensitive" duration-ms="253" started-at="2021-12-17T18:04:05Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T18:04:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[JHon@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="492" started-at="2021-12-17T18:04:05Z" finished-at="2021-12-17T18:04:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="userLoginTestSensitive" duration-ms="333" started-at="2021-12-17T18:04:06Z" data-provider="LoginWithWrongSensitive" finished-at="2021-12-17T18:04:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SHubhangi@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.DDUserLoginPageTest.userLoginTestSensitive(DDUserLoginPageTest.java:125)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLoginTestSensitive -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="temp" is-config="true" duration-ms="548" started-at="2021-12-17T18:04:06Z" finished-at="2021-12-17T18:04:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userLoginTestSensitive status=FAILURE method=DDUserLoginPageTest.userLoginTestSensitive(java.lang.String, java.lang.String)[pri:5, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="close()[pri:0, instance:mybank.testcases.DDUserLoginPageTest@4eb7f003]" name="close" is-config="true" duration-ms="1284" started-at="2021-12-17T18:04:06Z" finished-at="2021-12-17T18:04:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
      </class> <!-- mybank.testcases.DDUserLoginPageTest -->
    </test> <!-- DDUserLoginPageTest -->
    <test name="PersonalDetailsPageTest" duration-ms="5429" started-at="2021-12-17T12:34:08Z" finished-at="2021-12-17T12:34:13Z">
      <class name="mybank.testcases.PersonalDetailsPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@491cc5c9]" name="beforeTest" is-config="true" duration-ms="3237" started-at="2021-12-17T18:04:08Z" finished-at="2021-12-17T18:04:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="personalDetailsTest()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@491cc5c9]" name="personalDetailsTest" duration-ms="1936" started-at="2021-12-17T18:04:11Z" finished-at="2021-12-17T18:04:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	Account Number Matches !! expected [987654321312] but found ["987654321312"]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	Account Number Matches !! expected [987654321312] but found ["987654321312"]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at mybank.testcases.PersonalDetailsPageTest.personalDetailsTest(PersonalDetailsPageTest.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalDetailsTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@491cc5c9]" name="temp" is-config="true" duration-ms="111" started-at="2021-12-17T18:04:13Z" finished-at="2021-12-17T18:04:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=personalDetailsTest status=FAILURE method=PersonalDetailsPageTest.personalDetailsTest()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@491cc5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.PersonalDetailsPageTest@491cc5c9]" name="tear" is-config="true" duration-ms="143" started-at="2021-12-17T18:04:13Z" finished-at="2021-12-17T18:04:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.PersonalDetailsPageTest -->
    </test> <!-- PersonalDetailsPageTest -->
    <test name="TransactionRecordPageTest" duration-ms="6489" started-at="2021-12-17T12:34:13Z" finished-at="2021-12-17T12:34:20Z">
      <class name="mybank.testcases.TransactionRecordPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@8646db9]" name="beforeTest" is-config="true" duration-ms="3270" started-at="2021-12-17T18:04:13Z" finished-at="2021-12-17T18:04:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="FAIL" signature="TransactionRecordTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@8646db9]" name="TransactionRecordTest" duration-ms="1722" started-at="2021-12-17T18:04:16Z" finished-at="2021-12-17T18:04:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	expected [true] but found [false],
	Account Number Matches !! expected [987654321312] but found ["987654321312"]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	expected [true] but found [false],
	Account Number Matches !! expected [987654321312] but found ["987654321312"]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at mybank.testcases.TransactionRecordPageTest.TransactionRecordTest(TransactionRecordPageTest.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionRecordTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.TransactionRecordPageTest@8646db9]" name="temp" is-config="true" duration-ms="155" started-at="2021-12-17T18:04:18Z" finished-at="2021-12-17T18:04:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TransactionRecordTest status=FAILURE method=TransactionRecordPageTest.TransactionRecordTest()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@8646db9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.TransactionRecordPageTest@8646db9]" name="tear" is-config="true" duration-ms="1341" started-at="2021-12-17T18:04:18Z" finished-at="2021-12-17T18:04:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.TransactionRecordPageTest -->
    </test> <!-- TransactionRecordPageTest -->
    <test name="WithdrawMoneyPageTest" duration-ms="5297" started-at="2021-12-17T12:34:20Z" finished-at="2021-12-17T12:34:25Z">
      <class name="mybank.testcases.WithdrawMoneyPageTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="beforeTest" is-config="true" duration-ms="2987" started-at="2021-12-17T18:04:20Z" finished-at="2021-12-17T18:04:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="requestAtmPageAvabilityTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="requestAtmPageAvabilityTest" duration-ms="1135" started-at="2021-12-17T18:04:23Z" data-provider="Dataset" finished-at="2021-12-17T18:04:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- requestAtmPageAvabilityTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:24Z" finished-at="2021-12-17T18:04:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=requestAtmPageAvabilityTest status=SUCCESS method=WithdrawMoneyPageTest.requestAtmPageAvabilityTest(java.lang.String, java.lang.String)[pri:1, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="Test2()[pri:2, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="Test2" duration-ms="297" started-at="2021-12-17T18:04:24Z" finished-at="2021-12-17T18:04:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T18:04:24Z" finished-at="2021-12-17T18:04:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test2 status=SUCCESS method=WithdrawMoneyPageTest.Test2()[pri:2, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="FAIL" signature="Test3()[pri:3, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="Test3" duration-ms="241" started-at="2021-12-17T18:04:24Z" finished-at="2021-12-17T18:04:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at mybank.testcases.WithdrawMoneyPageTest.Test3(WithdrawMoneyPageTest.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="temp" is-config="true" duration-ms="108" started-at="2021-12-17T18:04:24Z" finished-at="2021-12-17T18:04:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test3 status=FAILURE method=WithdrawMoneyPageTest.Test3()[pri:3, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="Test4()[pri:4, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="Test4" duration-ms="245" started-at="2021-12-17T18:04:25Z" finished-at="2021-12-17T18:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:25Z" finished-at="2021-12-17T18:04:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test4 status=SUCCESS method=WithdrawMoneyPageTest.Test4()[pri:4, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="Test5()[pri:5, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="Test5" duration-ms="220" started-at="2021-12-17T18:04:25Z" finished-at="2021-12-17T18:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test5 -->
        <test-method status="PASS" signature="ShutDown()[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="ShutDown" is-config="true" duration-ms="59" started-at="2021-12-17T18:04:25Z" finished-at="2021-12-17T18:04:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ShutDown -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:25Z" finished-at="2021-12-17T18:04:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test5 status=SUCCESS method=WithdrawMoneyPageTest.Test5()[pri:5, instance:mybank.testcases.WithdrawMoneyPageTest@7cbd213e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
      </class> <!-- mybank.testcases.WithdrawMoneyPageTest -->
    </test> <!-- WithdrawMoneyPageTest -->
    <test name="SignUpPageTest" duration-ms="10143" started-at="2021-12-17T12:34:25Z" finished-at="2021-12-17T12:34:35Z">
      <class name="mybank.testcases.SignUpPageTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.SignUpPageTest@7a30d1e6]" name="setUp" is-config="true" duration-ms="3148" started-at="2021-12-17T18:04:25Z" finished-at="2021-12-17T18:04:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="EnterData()[pri:1, instance:mybank.testcases.SignUpPageTest@7a30d1e6]" name="EnterData" duration-ms="5658" started-at="2021-12-17T18:04:28Z" finished-at="2021-12-17T18:04:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterData -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.SignUpPageTest@7a30d1e6]" name="temp" is-config="true" duration-ms="2" started-at="2021-12-17T18:04:34Z" finished-at="2021-12-17T18:04:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EnterData status=SUCCESS method=SignUpPageTest.EnterData()[pri:1, instance:mybank.testcases.SignUpPageTest@7a30d1e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.SignUpPageTest@7a30d1e6]" name="tear" is-config="true" duration-ms="1333" started-at="2021-12-17T18:04:34Z" finished-at="2021-12-17T18:04:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.SignUpPageTest -->
    </test> <!-- SignUpPageTest -->
    <test name="SignUpPageValidationTest" duration-ms="8120" started-at="2021-12-17T12:34:35Z" finished-at="2021-12-17T12:34:43Z">
      <class name="mybank.testcases.SignUpPageValidationTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:mybank.testcases.SignUpPageValidationTest@4e718207]" name="setUp" is-config="true" duration-ms="2910" started-at="2021-12-17T18:04:35Z" finished-at="2021-12-17T18:04:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="SignUpWithInvalidEmailId()[pri:1, instance:mybank.testcases.SignUpPageValidationTest@4e718207]" name="SignUpWithInvalidEmailId" duration-ms="973" started-at="2021-12-17T18:04:38Z" finished-at="2021-12-17T18:04:39Z">
          <exception class="org.openqa.selenium.NoAlertPresentException">
            <message>
              <![CDATA[no such alert
  (Session info: chrome=96.0.4664.110)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'NGL001340', ip: '192.168.0.106', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [22ab78d105b98721a3bb1d5d2dcc8785, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\YASH_S~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:63941}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:63941/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 22ab78d105b98721a3bb1d5d2dcc8785]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoAlertPresentException: no such alert
  (Session info: chrome=96.0.4664.110)
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'NGL001340', ip: '192.168.0.106', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [22ab78d105b98721a3bb1d5d2dcc8785, getAlertText {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\YASH_S~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:63941}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:63941/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 22ab78d105b98721a3bb1d5d2dcc8785
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:614)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.alert(RemoteWebDriver.java:1054)
	at mybank.testcases.SignUpPageValidationTest.SignUpWithInvalidEmailId(SignUpPageValidationTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoAlertPresentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignUpWithInvalidEmailId -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.SignUpPageValidationTest@4e718207]" name="temp" is-config="true" duration-ms="449" started-at="2021-12-17T18:04:39Z" finished-at="2021-12-17T18:04:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SignUpWithInvalidEmailId status=FAILURE method=SignUpPageValidationTest.SignUpWithInvalidEmailId()[pri:1, instance:mybank.testcases.SignUpPageValidationTest@4e718207] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="signWithInvalidAccNumber()[pri:2, instance:mybank.testcases.SignUpPageValidationTest@4e718207]" name="signWithInvalidAccNumber" duration-ms="2169" started-at="2021-12-17T18:04:40Z" finished-at="2021-12-17T18:04:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signWithInvalidAccNumber -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.SignUpPageValidationTest@4e718207]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T18:04:42Z" finished-at="2021-12-17T18:04:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signWithInvalidAccNumber status=SUCCESS method=SignUpPageValidationTest.signWithInvalidAccNumber()[pri:2, instance:mybank.testcases.SignUpPageValidationTest@4e718207] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.SignUpPageValidationTest@4e718207]" name="tear" is-config="true" duration-ms="1612" started-at="2021-12-17T18:04:42Z" finished-at="2021-12-17T18:04:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- mybank.testcases.SignUpPageValidationTest -->
    </test> <!-- SignUpPageValidationTest -->
    <test name="HomePageTest" duration-ms="28703" started-at="2021-12-17T12:34:43Z" finished-at="2021-12-17T12:35:12Z">
      <class name="mybank.testcases.HomePageTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="setup" is-config="true" duration-ms="186" started-at="2021-12-17T18:02:33Z" finished-at="2021-12-17T18:02:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="beforeSuite" is-config="true" duration-ms="2907" started-at="2021-12-17T18:04:43Z" finished-at="2021-12-17T18:04:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="LoginTest()[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="LoginTest" duration-ms="1336" started-at="2021-12-17T18:04:46Z" finished-at="2021-12-17T18:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="2" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginTest status=SUCCESS method=HomePageTest.LoginTest()[pri:0, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="mybankLogoClickTest()[pri:1, instance:mybank.testcases.HomePageTest@2de8284b]" name="mybankLogoClickTest" duration-ms="115" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybankLogoClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mybankLogoClickTest status=SUCCESS method=HomePageTest.mybankLogoClickTest()[pri:1, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="homeClickTest()[pri:2, instance:mybank.testcases.HomePageTest@2de8284b]" name="homeClickTest" duration-ms="128" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=homeClickTest status=SUCCESS method=HomePageTest.homeClickTest()[pri:2, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="featuresClickTest()[pri:3, instance:mybank.testcases.HomePageTest@2de8284b]" name="featuresClickTest" duration-ms="151" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- featuresClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=featuresClickTest status=SUCCESS method=HomePageTest.featuresClickTest()[pri:3, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="aboutFAQsClickTest()[pri:4, instance:mybank.testcases.HomePageTest@2de8284b]" name="aboutFAQsClickTest" duration-ms="219" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aboutFAQsClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aboutFAQsClickTest status=SUCCESS method=HomePageTest.aboutFAQsClickTest()[pri:4, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="contactUsClickTest()[pri:5, instance:mybank.testcases.HomePageTest@2de8284b]" name="contactUsClickTest" duration-ms="209" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactUsClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactUsClickTest status=SUCCESS method=HomePageTest.contactUsClickTest()[pri:5, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="safetyBankingTipsClickTest()[pri:6, instance:mybank.testcases.HomePageTest@2de8284b]" name="safetyBankingTipsClickTest" duration-ms="237" started-at="2021-12-17T18:04:48Z" finished-at="2021-12-17T18:04:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- safetyBankingTipsClickTest -->
        <test-method status="PASS" signature="adminLoginClickTest()[pri:7, instance:mybank.testcases.HomePageTest@2de8284b]" name="adminLoginClickTest" duration-ms="221" started-at="2021-12-17T18:04:49Z" finished-at="2021-12-17T18:04:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminLoginClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:49Z" finished-at="2021-12-17T18:04:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=safetyBankingTipsClickTest status=SUCCESS method=HomePageTest.safetyBankingTipsClickTest()[pri:6, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:49Z" finished-at="2021-12-17T18:04:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=adminLoginClickTest status=SUCCESS method=HomePageTest.adminLoginClickTest()[pri:7, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="loginClickTest()[pri:8, instance:mybank.testcases.HomePageTest@2de8284b]" name="loginClickTest" duration-ms="184" started-at="2021-12-17T18:04:49Z" finished-at="2021-12-17T18:04:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginClickTest -->
        <test-method status="PASS" signature="signUpClickTest()[pri:9, instance:mybank.testcases.HomePageTest@2de8284b]" name="signUpClickTest" duration-ms="273" started-at="2021-12-17T18:04:49Z" finished-at="2021-12-17T18:04:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signUpClickTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:49Z" finished-at="2021-12-17T18:04:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginClickTest status=SUCCESS method=HomePageTest.loginClickTest()[pri:8, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:49Z" finished-at="2021-12-17T18:04:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=signUpClickTest status=SUCCESS method=HomePageTest.signUpClickTest()[pri:9, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="contactUsTest()[pri:10, instance:mybank.testcases.HomePageTest@2de8284b]" name="contactUsTest" duration-ms="479" started-at="2021-12-17T18:04:49Z" finished-at="2021-12-17T18:04:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- contactUsTest -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:50Z" finished-at="2021-12-17T18:04:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=contactUsTest status=SUCCESS method=HomePageTest.contactUsTest()[pri:10, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectSafetyTips()[pri:11, instance:mybank.testcases.HomePageTest@2de8284b]" name="redirectSafetyTips" duration-ms="253" started-at="2021-12-17T18:04:50Z" finished-at="2021-12-17T18:04:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectSafetyTips -->
        <test-method status="PASS" signature="redirectFacebook()[pri:12, instance:mybank.testcases.HomePageTest@2de8284b]" name="redirectFacebook" duration-ms="1374" started-at="2021-12-17T18:04:50Z" finished-at="2021-12-17T18:04:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectFacebook -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:50Z" finished-at="2021-12-17T18:04:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectSafetyTips status=SUCCESS method=HomePageTest.redirectSafetyTips()[pri:11, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:52Z" finished-at="2021-12-17T18:04:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectFacebook status=SUCCESS method=HomePageTest.redirectFacebook()[pri:12, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectTwitter()[pri:13, instance:mybank.testcases.HomePageTest@2de8284b]" name="redirectTwitter" duration-ms="5235" started-at="2021-12-17T18:04:52Z" finished-at="2021-12-17T18:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectTwitter -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:04:57Z" finished-at="2021-12-17T18:04:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectTwitter status=SUCCESS method=HomePageTest.redirectTwitter()[pri:13, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectYoutube()[pri:14, instance:mybank.testcases.HomePageTest@2de8284b]" name="redirectYoutube" duration-ms="4778" started-at="2021-12-17T18:04:57Z" finished-at="2021-12-17T18:05:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectYoutube -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:05:02Z" finished-at="2021-12-17T18:05:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectYoutube status=SUCCESS method=HomePageTest.redirectYoutube()[pri:14, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectGoogle()[pri:15, instance:mybank.testcases.HomePageTest@2de8284b]" name="redirectGoogle" duration-ms="1550" started-at="2021-12-17T18:05:02Z" finished-at="2021-12-17T18:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectGoogle -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="1" started-at="2021-12-17T18:05:03Z" finished-at="2021-12-17T18:05:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectGoogle status=SUCCESS method=HomePageTest.redirectGoogle()[pri:15, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectInstagram()[pri:16, instance:mybank.testcases.HomePageTest@2de8284b]" name="redirectInstagram" duration-ms="4200" started-at="2021-12-17T18:05:03Z" finished-at="2021-12-17T18:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectInstagram -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:05:07Z" finished-at="2021-12-17T18:05:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectInstagram status=SUCCESS method=HomePageTest.redirectInstagram()[pri:16, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="redirectLinkedIn()[pri:17, instance:mybank.testcases.HomePageTest@2de8284b]" name="redirectLinkedIn" duration-ms="2098" started-at="2021-12-17T18:05:07Z" finished-at="2021-12-17T18:05:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- redirectLinkedIn -->
        <test-method status="PASS" signature="temp(org.testng.ITestResult)[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="temp" is-config="true" duration-ms="0" started-at="2021-12-17T18:05:09Z" finished-at="2021-12-17T18:05:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=redirectLinkedIn status=SUCCESS method=HomePageTest.redirectLinkedIn()[pri:17, instance:mybank.testcases.HomePageTest@2de8284b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- temp -->
        <test-method status="PASS" signature="tear()[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="tear" is-config="true" duration-ms="2728" started-at="2021-12-17T18:05:09Z" finished-at="2021-12-17T18:05:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:mybank.testcases.HomePageTest@2de8284b]" name="tearDown" is-config="true" duration-ms="319" started-at="2021-12-17T18:05:12Z" finished-at="2021-12-17T18:05:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- mybank.testcases.HomePageTest -->
    </test> <!-- HomePageTest -->
  </suite> <!-- MybankTestSuite -->
</testng-results>
